apiVersion: tekton.dev/v1alpha1
kind: TaskRun
metadata:
  name: $(generateName)
spec:
  serviceAccount: ci-create-cluster-service-account
  inputs:
    params:
    - name: namespace
      value: $(namespace)
    - name: app_dir
      value: $(app_dir)
    - name: cluster
      value: $(cluster)
    - name: kfctl_image
      value: $(kfctl_image)
    - name: pvc_mount_path
      value: $(pvc_mount_path)
    - name: pathToDockerFile
      value: $(path_to_docker_file)
    - name: pathToContext
      value: $(path_to_context)
    - name: dockerTarget
      value: $(docker_target)
    resources:
    - name: kubeflow
      resourceSpec:
        type: git
        params:
          - name: revision
            value: master
          - name: url
            value: https://github.com/kubeflow/kubeflow.git
  outputs:
    resources:
    - name: builtImage
      outputImageDir: /workspace/builtImage
      resourceSpec:
        type: image
        params:
        - name: url
          value: $(IMG)
  taskSpec:
    inputs:
      resources:
      - name: kubeflow
        type: git
      params:
      - name: pathToDockerFile
        type: string
        description: The path to the dockerfile to build
        default: /workspace/kubeflow/Dockerfile
      - name: pathToContext
        type: string
        description:
          The build context used by Kaniko
          (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
        default: /workspace/kubeflow
    outputs:
      resources:
      - name: builtImage
        type: image
        outputImageDir: /workspace/builtImage
    steps:
    - name: build-and-push
      image: gcr.io/kaniko-project/executor:v0.10.0
      command:
      - /kaniko/executor
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /secret/kaniko-secret.json
      args: ["--dockerfile=${inputs.params.pathToDockerFile}",
             "--destination=${outputs.resources.builtImage.url}",
             "--context=${inputs.params.pathToContext}",
             "--target=${inputs.params.dockerTarget}"]
      volumeMounts:
      - name: kaniko-secret
        mountPath: /secret
    volumes:
    - name: kaniko-secret
      secret:
        secretName: kaniko-secret
