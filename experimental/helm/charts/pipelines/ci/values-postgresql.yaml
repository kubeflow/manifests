# PostgreSQL values for kubeflow-pipelines.
# This configuration uses PostgreSQL instead of MySQL

# CRDs are not included in Kustomize platform-agnostic-postgresql
crds:
  install: false

# Third-party services configuration
thirdParty:
  argo:
    enabled: true
  mysql:
    enabled: false
  minio:
    enabled: true
    portName: http
  metacontroller:
    enabled: false
  # Use built-in PostgreSQL deployment (not subchart)
  postgresql:
    enabled: true
    image:
      repository: postgres
      tag: "14.7-alpine3.17"
    database: "postgres"
    username: "user"
    password: "password"
    secretName: "postgres-secret"
    secretKey: "root_password"
    persistence:
      size: "20Gi"

# Disable MySQL subchart
mysql:
  enabled: false

# Disable postgresql subchart
postgresql:
  enabled: false

# External database configuration pointing to PostgreSQL
externalDatabase:
  type: postgresql
  host: ""
  port: 5432
  database: "mlpipeline"
  username: "postgres"

# Additional databases for PostgreSQL
database:
  metadb: "metadb"
  cachedb: "cachedb"
  connectionMaxLifetime: "120s"

# Standard MinIO configuration
objectStore:
  provider: minio

# Disable MinIO subchart 
minio:
  enabled: false

# Metadata service configuration
metadata:
  enabled: true
  grpc:
    image:
      repository: gcr.io/tfx-oss-public/ml_metadata_store_server
      tag: "1.14.0"
      pullPolicy: IfNotPresent
    resources:

# Standard component configuration
apiServer:
  replicas: 1
  resources:
    requests:
      cpu: 250m
      memory: 500Mi
  additionalEnv:
    - name: AUTO_UPDATE_PIPELINE_DEFAULT_VERSION
      key: autoUpdatePipelineDefaultVersion
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: OBJECTSTORECONFIG_SECURE
      value: "false"
    - name: OBJECTSTORECONFIG_BUCKETNAME
      key: bucketName
      configMapName: pipeline-install-config
    - name: DBCONFIG_CONMAXLIFETIME
      key: ConMaxLifeTime
    - name: DB_DRIVER_NAME
      key: dbType
    - name: DBCONFIG_POSTGRESQLCONFIG_USER
      key: username
      secretName: postgres-secret-extended
      secretKey: username
    - name: DBCONFIG_POSTGRESQLCONFIG_PASSWORD
      key: password
      secretName: postgres-secret-extended
      secretKey: password
    - name: DBCONFIG_POSTGRESQLCONFIG_DBNAME
      key: pipelineDb
    - name: DBCONFIG_POSTGRESQLCONFIG_HOST
      key: postgresHost
    - name: DBCONFIG_POSTGRESQLCONFIG_PORT
      key: postgresPort
    - name: OBJECTSTORECONFIG_ACCESSKEY
      key: accesskey
    - name: OBJECTSTORECONFIG_SECRETACCESSKEY
      key: secretkey

persistenceAgent:
  replicas: 1
  resources:
    requests:
      cpu: 120m
      memory: 500Mi
  additionalEnv:
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    

scheduledWorkflow:
  replicas: 1
  resources:
  additionalEnv:
    - name: LOG_LEVEL
      value: "info"
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace

cache:
  server:
    additionalEnv:
      - name: DEFAULT_CACHE_STALENESS
        key: DEFAULT_CACHE_STALENESS
      - name: MAXIMUM_CACHE_STALENESS
        key: MAXIMUM_CACHE_STALENESS
      - name: CACHE_IMAGE
        key: cacheImage
      - name: CACHE_NODE_RESTRICTIONS
        key: cacheNodeRestrictions
      - name: DBCONFIG_DRIVER
        value: "pgx"
      - name: DBCONFIG_DB_NAME
        key: cacheDb
      - name: DBCONFIG_HOST_NAME
        key: postgresHost
      - name: DBCONFIG_PORT
        key: postgresPort
      - name: DBCONFIG_USER
        secretName: postgres-secret-extended
        secretKey: username
      - name: DBCONFIG_PASSWORD
        secretName: postgres-secret-extended
        secretKey: password
      - name: NAMESPACE_TO_WATCH
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace

viewerCrd:
  additionalEnv:
    - name: MAX_NUM_VIEWERS
      value: "50"
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace

ui:
  replicas: 1
  resources:
    requests:
      cpu: 10m
      memory: 70Mi
  additionalEnv:
    - name: VIEWER_TENSORBOARD_POD_TEMPLATE_SPEC_PATH
      value: "/etc/config/viewer-pod-template.json"
    - name: MINIO_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: MINIO_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          key: accesskey
          name: mlpipeline-minio-artifact
    - name: MINIO_SECRET_KEY
      valueFrom:
        secretKeyRef:
          key: secretkey
          name: mlpipeline-minio-artifact
    - name: ALLOW_CUSTOM_VISUALIZATIONS
      value: "true"
    - name: FRONTEND_SERVER_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: ARGO_ARCHIVE_LOGS
      value: "true"
    - name: DISABLE_GKE_METADATA
      value: "true"



# Disable monitoring for simplicity
monitoring:
  prometheus:
    enabled: false
  grafana:
    enabled: false

# Standard security
security:
  podSecurityStandards:
    enabled: true
    enforce: "restricted"