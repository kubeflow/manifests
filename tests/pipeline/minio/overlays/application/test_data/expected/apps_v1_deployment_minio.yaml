apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: minio
    app.kubernetes.io/component: minio
    app.kubernetes.io/instance: minio-0.2.0
    app.kubernetes.io/managed-by: kfctl
    app.kubernetes.io/name: minio
    app.kubernetes.io/part-of: kubeflow
    app.kubernetes.io/version: 0.2.0
  name: minio
spec:
  selector:
    matchLabels:
      app: minio
      app.kubernetes.io/component: minio
      app.kubernetes.io/instance: minio-0.2.0
      app.kubernetes.io/managed-by: kfctl
      app.kubernetes.io/name: minio
      app.kubernetes.io/part-of: kubeflow
      app.kubernetes.io/version: 0.2.0
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: minio
        app.kubernetes.io/component: minio
        app.kubernetes.io/instance: minio-0.2.0
        app.kubernetes.io/managed-by: kfctl
        app.kubernetes.io/name: minio
        app.kubernetes.io/part-of: kubeflow
        app.kubernetes.io/version: 0.2.0
    spec:
      containers:
      - args:
        - server
        - /data
        env:
        - name: MINIO_ACCESS_KEY
          value: minio
        - name: MINIO_SECRET_KEY
          value: minio123
        image: minio/minio:RELEASE.2018-02-09T22-40-05Z
        name: minio
        ports:
        - containerPort: 9000
        volumeMounts:
        - mountPath: /data
          name: data
          subPath: minio
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: ""
