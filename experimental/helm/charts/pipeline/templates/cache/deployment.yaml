{{- if .Values.cache.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cache-server
  namespace: {{ include "kubeflow-pipelines.namespace" . }}
  labels:
    {{- include "kubeflow-pipelines.cacheLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.cache.server.replicas }}
  selector:
    matchLabels:
      {{- include "kubeflow-pipelines.cacheSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "kubeflow-pipelines.cacheLabels" . | nindent 8 }}
    spec:
      serviceAccountName: kubeflow-pipelines-cache
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: server
        image: {{ include "kubeflow-pipelines.image" (dict "repository" .Values.cache.server.image.repository "tag" .Values.cache.server.image.tag "context" .) }}
        imagePullPolicy: Always
        args:
        - "--db_driver=$(DBCONFIG_DRIVER)"
        - "--db_host=$(DBCONFIG_HOST_NAME)"
        - "--db_port=$(DBCONFIG_PORT)"
        - "--db_name=$(DBCONFIG_DB_NAME)"
        - "--db_user=$(DBCONFIG_USER)"
        - "--db_password=$(DBCONFIG_PASSWORD)"
        - "--namespace_to_watch=$(NAMESPACE_TO_WATCH)"
        - "--listen_port=$(WEBHOOK_PORT)"
        env:
        - name: DEFAULT_CACHE_STALENESS
          valueFrom:
            configMapKeyRef:
              name: pipeline-install-config
              key: DEFAULT_CACHE_STALENESS
        - name: MAXIMUM_CACHE_STALENESS
          valueFrom:
            configMapKeyRef:
              name: pipeline-install-config
              key: MAXIMUM_CACHE_STALENESS
        - name: CACHE_IMAGE
          valueFrom:
            configMapKeyRef:
              name: pipeline-install-config
              key: cacheImage
        - name: CACHE_NODE_RESTRICTIONS
          valueFrom:
            configMapKeyRef:
              name: pipeline-install-config
              key: cacheNodeRestrictions
        - name: DBCONFIG_DRIVER
          value: mysql
        - name: DBCONFIG_DB_NAME
          valueFrom:
            configMapKeyRef:
              name: pipeline-install-config
              key: cacheDb
        - name: DBCONFIG_HOST_NAME
          valueFrom:
            configMapKeyRef:
              name: pipeline-install-config
              key: dbHost
        - name: DBCONFIG_PORT
          valueFrom:
            configMapKeyRef:
              name: pipeline-install-config
              key: dbPort
        - name: DBCONFIG_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: username
        - name: DBCONFIG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: password
        - name: NAMESPACE_TO_WATCH
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: WEBHOOK_PORT
          value: "8443"
        ports:
        - name: webhook-api
          containerPort: 8443
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsGroup: 0
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - name: webhook-tls-certs
          mountPath: /etc/webhook/certs
          readOnly: true
      volumes:
      - name: webhook-tls-certs
        secret:
          secretName: webhook-server-tls
{{- end }}
