---
# Source: dlf-chart/charts/csi-nfs-chart/templates/csi-attacher-nfsplugin.yaml
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: csi-attacher-nfsplugin
  namespace: dlf
  labels:
    app.kubernetes.io/name: "dlf"
spec:
  selector:
    matchLabels:
      app: csi-attacher-nfsplugin
  serviceName: "csi-attacher-nfsplugin"
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "dlf"
        app: csi-attacher-nfsplugin
    spec:
      serviceAccountName: csi-attacher-nfs
      containers:
        - name: csi-attacher
          image: "quay.io/k8scsi/csi-attacher:v3.0.0"
          args:
            - "--v=10"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          imagePullPolicy: Always
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: nfs
          image: "yiannisgkoufas/csi-nfs:dev-full-amd64"
          args :
            - "--nodeid=$(NODE_ID)"
            - "--endpoint=$(CSI_ENDPOINT)"
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix://plugin/csi.sock
          imagePullPolicy: Always
          volumeMounts:
            - name: socket-dir
              mountPath: /plugin
      volumes:
        - name: socket-dir
          emptyDir: {}
---
# Source: dlf-chart/charts/csi-s3-chart/templates/attacher.yaml
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: csi-attacher-s3
  namespace: dlf
  labels:
    app.kubernetes.io/name: "dlf"
spec:
  serviceName: "csi-attacher-s3"
  replicas: 1
  selector:
    matchLabels:
      app: csi-attacher-s3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "dlf"
        app: csi-attacher-s3
    spec:
      serviceAccountName: csi-attacher
      containers:
        - name: csi-attacher
          image: "quay.io/k8scsi/csi-attacher:v3.0.0"
          imagePullPolicy: Always
          args:
            - --v=5
            - --csi-address=/csi/csi.sock
          securityContext:
            # This is necessary only for systems with SELinux, where
            # non-privileged sidecar containers cannot access unix domain socket
            # created by privileged CSI driver container.
            privileged: true
          volumeMounts:
          - mountPath: /csi
            name: socket-dir

      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/csi-s3
            type: DirectoryOrCreate
          name: socket-dir
---
# Source: dlf-chart/charts/csi-s3-chart/templates/provisioner.yaml
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: csi-provisioner-s3
  labels:
    app.kubernetes.io/name: "dlf"
  namespace: dlf
spec:
  serviceName: "csi-provisioner-s3"
  replicas: 1
  selector:
    matchLabels:
      app: csi-provisioner-s3
  template:
    metadata:
      labels:
        app: csi-provisioner-s3
    spec:
      serviceAccountName: csi-provisioner
      containers:
        - name: csi-provisioner
          image: "quay.io/k8scsi/csi-provisioner:v2.0.2"
          imagePullPolicy: Always
          args:
            - -v=5
            - --csi-address=/csi/csi.sock
            - --feature-gates=Topology=true
          securityContext:
            # This is necessary only for systems with SELinux, where
            # non-privileged sidecar containers cannot access unix domain socket
            # created by privileged CSI driver container.
            privileged: true
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/csi-s3
            type: DirectoryOrCreate
          name: socket-dir