{{- if .Values.ui.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-pipeline-ui
  namespace: {{ include "kubeflow-pipelines.namespace" . }}
  labels:
    {{- include "kubeflow-pipelines.uiLabels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "kubeflow-pipelines.uiSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        {{- include "kubeflow-pipelines.uiLabels" . | nindent 8 }}
    spec:
      serviceAccountName: ml-pipeline-ui
      volumes:
      - name: config-volume
        configMap:
          name: ml-pipeline-ui-configmap
      containers:
      - name: ml-pipeline-ui
        image: {{ include "kubeflow-pipelines.image" (dict "repository" .Values.ui.image.repository "tag" .Values.ui.image.tag "context" .) }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
          readOnly: true
        env:
        - name: VIEWER_TENSORBOARD_POD_TEMPLATE_SPEC_PATH
          value: /etc/config/viewer-pod-template.json
        - name: MINIO_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: accesskey
              name: mlpipeline-minio-artifact
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: secretkey
              name: mlpipeline-minio-artifact
        - name: ALLOW_CUSTOM_VISUALIZATIONS
          value: {{ .Values.ui.env.allowCustomVisualizations | quote }}
        - name: FRONTEND_SERVER_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ARGO_ARCHIVE_LOGS
          value: {{ .Values.ui.env.argoArchiveLogs | quote }}
        - name: DISABLE_GKE_METADATA
          value: {{ .Values.ui.env.disableGkeMetadata | quote }}
        livenessProbe:
          exec:
            command:
            - wget
            - -q
            - -S
            - -O
            - "-"
            - http://localhost:3000/apis/v1beta1/healthz
          initialDelaySeconds: {{ .Values.ui.probes.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.ui.probes.liveness.periodSeconds }}
          timeoutSeconds: {{ .Values.ui.probes.liveness.timeoutSeconds }}
        readinessProbe:
          exec:
            command:
            - wget
            - -q
            - -S
            - -O
            - "-"
            - http://localhost:3000/apis/v1beta1/healthz
          initialDelaySeconds: {{ .Values.ui.probes.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.ui.probes.readiness.periodSeconds }}
          timeoutSeconds: {{ .Values.ui.probes.readiness.timeoutSeconds }}
        resources:
          {{- toYaml .Values.ui.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.ui.securityContext | nindent 10 }}
      securityContext:
        seccompProfile:
          type: {{ .Values.security.seccompProfile.type }}
{{- end }}
