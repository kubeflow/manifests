{{- if .Values.apiServer.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-pipeline
  namespace: {{ include "kubeflow-pipelines.namespace" . }}
  labels:
    {{- include "kubeflow-pipelines.mlPipelineLabels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "kubeflow-pipelines.mlPipelineSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        {{- include "kubeflow-pipelines.mlPipelineLabels" . | nindent 8 }}
    spec:
      serviceAccountName: ml-pipeline
      containers:
      - name: ml-pipeline-api-server
        image: {{ include "kubeflow-pipelines.image" (dict "repository" .Values.apiServer.image.repository "tag" .Values.apiServer.image.tag "context" .) }}
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8888
        - name: grpc
          containerPort: 8887
        env:
        # API Server specific environment variables
        {{- if eq .Values.installMode.type "multi-user" }}
        - name: KUBEFLOW_USERID_HEADER
          value: "kubeflow-userid"
        - name: KUBEFLOW_USERID_PREFIX
          value: ""
        {{- end }}
        - name: PUBLISH_LOGS
          value: {{ .Values.apiServer.env.publishLogs | quote }}
        - name: LOG_LEVEL
          value: {{ .Values.global.logLevel | quote }}
        - name: PIPELINE_LOG_LEVEL
          value: {{ .Values.apiServer.env.pipelineLogLevel | quote }}
        - name: AUTO_UPDATE_PIPELINE_DEFAULT_VERSION
          valueFrom:
            configMapKeyRef:
              key: autoUpdatePipelineDefaultVersion
              name: pipeline-install-config
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OBJECTSTORECONFIG_SECURE
          value: "false"
        - name: OBJECTSTORECONFIG_BUCKETNAME
          valueFrom:
            configMapKeyRef:
              key: bucketName
              name: pipeline-install-config
        - name: DBCONFIG_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: mysql-secret
        - name: DBCONFIG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mysql-secret
        - name: DBCONFIG_DBNAME
          valueFrom:
            configMapKeyRef:
              key: pipelineDb
              name: pipeline-install-config
        - name: DBCONFIG_HOST
          valueFrom:
            configMapKeyRef:
              key: dbHost
              name: pipeline-install-config
        - name: DBCONFIG_PORT
          valueFrom:
            configMapKeyRef:
              key: dbPort
              name: pipeline-install-config
        - name: DBCONFIG_CONMAXLIFETIME
          valueFrom:
            configMapKeyRef:
              key: ConMaxLifeTime
              name: pipeline-install-config
        - name: DB_DRIVER_NAME
          valueFrom:
            configMapKeyRef:
              key: dbType
              name: pipeline-install-config
        - name: DBCONFIG_MYSQLCONFIG_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: mysql-secret
        - name: DBCONFIG_MYSQLCONFIG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mysql-secret
        - name: DBCONFIG_MYSQLCONFIG_DBNAME
          valueFrom:
            configMapKeyRef:
              key: pipelineDb
              name: pipeline-install-config
        - name: DBCONFIG_MYSQLCONFIG_HOST
          valueFrom:
            configMapKeyRef:
              key: mysqlHost
              name: pipeline-install-config
        - name: DBCONFIG_MYSQLCONFIG_PORT
          valueFrom:
            configMapKeyRef:
              key: mysqlPort
              name: pipeline-install-config
        - name: OBJECTSTORECONFIG_ACCESSKEY
          valueFrom:
            secretKeyRef:
              key: accesskey
              name: mlpipeline-minio-artifact
        - name: OBJECTSTORECONFIG_SECRETACCESSKEY
          valueFrom:
            secretKeyRef:
              key: secretkey
              name: mlpipeline-minio-artifact
        - name: V2_DRIVER_IMAGE
          value: {{ .Values.apiServer.env.v2DriverImage | quote }}
        - name: V2_LAUNCHER_IMAGE
          value: {{ .Values.apiServer.env.v2LauncherImage | quote }}
        {{- if eq .Values.installMode.type "multi-user" }}
        envFrom:
        - configMapRef:
            name: pipeline-api-server-config
        {{- end }}
        livenessProbe:
          exec:
            command:
            - wget
            - -q
            - -S
            - -O
            - "-"
            - http://localhost:8888/apis/v1beta1/healthz
          initialDelaySeconds: {{ .Values.apiServer.probes.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.apiServer.probes.liveness.periodSeconds }}
          timeoutSeconds: {{ .Values.apiServer.probes.liveness.timeoutSeconds }}
        readinessProbe:
          exec:
            command:
            - wget
            - -q
            - -S
            - -O
            - "-"
            - http://localhost:8888/apis/v1beta1/healthz
          initialDelaySeconds: {{ .Values.apiServer.probes.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.apiServer.probes.readiness.periodSeconds }}
          timeoutSeconds: {{ .Values.apiServer.probes.readiness.timeoutSeconds }}
        resources:
          {{- toYaml .Values.apiServer.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.apiServer.securityContext | nindent 10 }}
        startupProbe:
          exec:
            command:
            - wget
            - -q
            - -S
            - -O
            - "-"
            - http://localhost:8888/apis/v1beta1/healthz
          failureThreshold: {{ .Values.apiServer.probes.startup.failureThreshold }}
          periodSeconds: {{ .Values.apiServer.probes.startup.periodSeconds }}
          timeoutSeconds: {{ .Values.apiServer.probes.startup.timeoutSeconds }}
      securityContext:
        seccompProfile:
          type: {{ .Values.security.seccompProfile.type }}
{{- end }}
