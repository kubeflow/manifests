apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: jupyter-web-app
    kustomize.component: jupyter-web-app
  name: jupyter-web-app-service-account
  namespace: kubeflow
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  labels:
    app: jupyter-web-app
    kustomize.component: jupyter-web-app
  name: jupyter-web-app-jupyter-notebook-role
  namespace: kubeflow
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  - secrets
  - services
  verbs:
  - '*'
- apiGroups:
  - ""
  - apps
  - extensions
  resources:
  - deployments
  - replicasets
  verbs:
  - '*'
- apiGroups:
  - kubeflow.org
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: jupyter-web-app
    kustomize.component: jupyter-web-app
  name: jupyter-web-app-cluster-role
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - create
  - delete
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - kubeflow.org
  resources:
  - notebooks
  - notebooks/finalizers
  - poddefaults
  verbs:
  - get
  - list
  - create
  - delete
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - create
  - delete
  - get
  - list
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: jupyter-web-app
    kustomize.component: jupyter-web-app
    rbac.authorization.kubeflow.org/aggregate-to-kubeflow-admin: "true"
  name: jupyter-web-app-kubeflow-notebook-ui-admin
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: jupyter-web-app
    kustomize.component: jupyter-web-app
    rbac.authorization.kubeflow.org/aggregate-to-kubeflow-edit: "true"
  name: jupyter-web-app-kubeflow-notebook-ui-edit
rules:
- apiGroups:
  - kubeflow.org
  resources:
  - notebooks
  - notebooks/finalizers
  - poddefaults
  verbs:
  - get
  - list
  - create
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: jupyter-web-app
    kustomize.component: jupyter-web-app
    rbac.authorization.kubeflow.org/aggregate-to-kubeflow-view: "true"
  name: jupyter-web-app-kubeflow-notebook-ui-view
rules:
- apiGroups:
  - kubeflow.org
  resources:
  - notebooks
  - notebooks/finalizers
  - poddefaults
  verbs:
  - get
  - list
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  labels:
    app: jupyter-web-app
    kustomize.component: jupyter-web-app
  name: jupyter-web-app-jupyter-notebook-role-binding
  namespace: kubeflow
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jupyter-web-app-jupyter-notebook-role
subjects:
- kind: ServiceAccount
  name: jupyter-notebook
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: jupyter-web-app
    kustomize.component: jupyter-web-app
  name: jupyter-web-app-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jupyter-web-app-cluster-role
subjects:
- kind: ServiceAccount
  name: jupyter-web-app-service-account
  namespace: kubeflow
---
apiVersion: v1
data:
  spawner_ui_config.yaml: |-
    # Configuration file for the Jupyter UI.
    #
    # Each Jupyter UI option is configured by two keys: 'value' and 'readOnly'
    # - The 'value' key contains the default value
    # - The 'readOnly' key determines if the option will be available to users
    #
    # If the 'readOnly' key is present and set to 'true', the respective option
    # will be disabled for users and only set by the admin. Also when a
    # Notebook is POSTED to the API if a necessary field is not present then
    # the value from the config will be used.
    #
    # If the 'readOnly' key is missing (defaults to 'false'), the respective option
    # will be available for users to edit.
    #
    # Note that some values can be templated. Such values are the names of the
    # Volumes as well as their StorageClass
    spawnerFormDefaults:
      image:
        # The container Image for the user's Jupyter Notebook
        # If readonly, this value must be a member of the list below
        value: gcr.io/kubeflow-images-public/tensorflow-1.14.0-notebook-cpu:v-base-ef41372-1177829795472347138
        # The list of available standard container Images
        options:
          - gcr.io/kubeflow-images-public/tensorflow-1.15.2-notebook-cpu:1.0.0
          - gcr.io/kubeflow-images-public/tensorflow-1.15.2-notebook-gpu:1.0.0
          - gcr.io/kubeflow-images-public/tensorflow-2.1.0-notebook-cpu:1.0.0
          - gcr.io/kubeflow-images-public/tensorflow-2.1.0-notebook-gpu:1.0.0
        # By default, custom container Images are allowed
        # Uncomment the following line to only enable standard container Images
        readOnly: false
      cpu:
        # CPU for user's Notebook
        value: '0.5'
        readOnly: false
      memory:
        # Memory for user's Notebook
        value: 1.0Gi
        readOnly: false
      workspaceVolume:
        # Workspace Volume to be attached to user's Notebook
        # Each Workspace Volume is declared with the following attributes:
        # Type, Name, Size, MountPath and Access Mode
        value:
          type:
            # The Type of the Workspace Volume
            # Supported values: 'New', 'Existing'
            value: New
          name:
            # The Name of the Workspace Volume
            # Note that this is a templated value. Special values:
            # {notebook-name}: Replaced with the name of the Notebook. The frontend
            #                  will replace this value as the user types the name
            value: 'workspace-{notebook-name}'
          size:
            # The Size of the Workspace Volume (in Gi)
            value: '10Gi'
          mountPath:
            # The Path that the Workspace Volume will be mounted
            value: /home/jovyan
          accessModes:
            # The Access Mode of the Workspace Volume
            # Supported values: 'ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany'
            value: ReadWriteOnce
          class:
            # The StrageClass the PVC will use if type is New. Special values are:
            # {none}: default StorageClass
            # {empty}: empty string ""
            value: '{none}'
        readOnly: false
      dataVolumes:
        # List of additional Data Volumes to be attached to the user's Notebook
        value: []
        # Each Data Volume is declared with the following attributes:
        # Type, Name, Size, MountPath and Access Mode
        #
        # For example, a list with 2 Data Volumes:
        # value:
        #   - value:
        #       type:
        #         value: New
        #       name:
        #         value: '{notebook-name}-vol-1'
        #       size:
        #         value: '10Gi'
        #       class:
        #         value: standard
        #       mountPath:
        #         value: /home/jovyan/vol-1
        #       accessModes:
        #         value: ReadWriteOnce
        #       class:
        #         value: {none}
        #   - value:
        #       type:
        #         value: New
        #       name:
        #         value: '{notebook-name}-vol-2'
        #       size:
        #         value: '10Gi'
        #       mountPath:
        #         value: /home/jovyan/vol-2
        #       accessModes:
        #         value: ReadWriteMany
        #       class:
        #         value: {none}
        readOnly: false
      gpus:
        # Number of GPUs to be assigned to the Notebook Container
        value:
          # values: "none", "1", "2", "4", "8"
          num: "none"
          # Determines what the UI will show and send to the backend
          vendors:
            - limitsKey: "nvidia.com/gpu"
              uiName: "NVIDIA"
          # Values: "" or a `limits-key` from the vendors list
          vendor: ""
        readOnly: false
      shm:
        value: true
        readOnly: false
      configurations:
        # List of labels to be selected, these are the labels from PodDefaults
        # value:
        #   - add-gcp-secret
        #   - default-editor
        value: []
        readOnly: false
kind: ConfigMap
metadata:
  labels:
    app: jupyter-web-app
    kustomize.component: jupyter-web-app
  name: jupyter-web-app-jupyter-web-app-config-d2m28hb5d2
  namespace: kubeflow
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    getambassador.io/config: |-
      ---
      apiVersion: ambassador/v0
      kind:  Mapping
      name: webapp_mapping
      prefix: /$(prefix)/
      service: jupyter-web-app-service.$(namespace)
      add_request_headers:
        x-forwarded-prefix: /jupyter
  labels:
    app: jupyter-web-app
    kustomize.component: jupyter-web-app
    run: jupyter-web-app
  name: jupyter-web-app-service
  namespace: kubeflow
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: jupyter-web-app
    kustomize.component: jupyter-web-app
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jupyter-web-app
    kustomize.component: jupyter-web-app
  name: jupyter-web-app-deployment
  namespace: kubeflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jupyter-web-app
      kustomize.component: jupyter-web-app
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: jupyter-web-app
        kustomize.component: jupyter-web-app
    spec:
      containers:
      - env:
        - name: USERID_HEADER
          valueFrom:
            configMapKeyRef:
              key: userid-header
              name: kubeflow-config
        - name: USERID_PREFIX
          valueFrom:
            configMapKeyRef:
              key: userid-prefix
              name: kubeflow-config
        image: gcr.io/kubeflow-images-public/jupyter-web-app
        name: jupyter-web-app
        ports:
        - containerPort: 5000
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      serviceAccountName: jupyter-web-app-service-account
      volumes:
      - configMap:
          name: jupyter-web-app-jupyter-web-app-config-d2m28hb5d2
        name: config-volume
---
apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  labels:
    app: jupyter-web-app
    app.kubernetes.io/component: jupyter-web-app
    app.kubernetes.io/instance: jupyter-web-app-v0.7.0
    app.kubernetes.io/managed-by: kfctl
    app.kubernetes.io/name: jupyter-web-app
    app.kubernetes.io/part-of: kubeflow
    app.kubernetes.io/version: v0.7.0
    kustomize.component: jupyter-web-app
  name: jupyter-web-app-jupyter-web-app
  namespace: kubeflow
spec:
  addOwnerRef: true
  componentKinds:
  - group: core
    kind: ConfigMap
  - group: apps
    kind: Deployment
  - group: rbac.authorization.k8s.io
    kind: RoleBinding
  - group: rbac.authorization.k8s.io
    kind: Role
  - group: core
    kind: ServiceAccount
  - group: core
    kind: Service
  - group: networking.istio.io
    kind: VirtualService
  descriptor:
    description: Provides a UI which allows the user to create/conect/delete jupyter
      notebooks.
    keywords:
    - jupyterhub
    - jupyter ui
    - notebooks
    links:
    - description: About
      url: https://github.com/kubeflow/kubeflow/tree/master/components/jupyter-web-app
    - description: Docs
      url: https://www.kubeflow.org/docs/notebooks
    maintainers:
    - email: kimwnasptd@arrikto.com
      name: Kimonas Sotirchos
    owners:
    - email: kimwnasptd@arrikto.com
      name: Kimonas Sotirchos
    type: jupyter-web-app
    version: v1beta1
  selector:
    matchLabels:
      app.kubernetes.io/component: jupyter-web-app
      app.kubernetes.io/instance: jupyter-web-app-v0.7.0
      app.kubernetes.io/managed-by: kfctl
      app.kubernetes.io/name: jupyter-web-app
      app.kubernetes.io/part-of: kubeflow
      app.kubernetes.io/version: v0.7.0
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  labels:
    app: jupyter-web-app
    kustomize.component: jupyter-web-app
  name: jupyter-web-app-jupyter-web-app
  namespace: kubeflow
spec:
  gateways:
  - kubeflow-gateway
  hosts:
  - '*'
  http:
  - headers:
      request:
        add:
          x-forwarded-prefix: /jupyter
    match:
    - uri:
        prefix: /jupyter/
    rewrite:
      uri: /
    route:
    - destination:
        host: jupyter-web-app-service.$(namespace).svc.$(clusterDomain)
        port:
          number: 80
