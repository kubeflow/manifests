# Development Environment Configuration - Enhanced
# This configuration is optimized for local development and testing

global:
  namespace: kubeflow
  imageRegistry: ghcr.io/kubeflow
  imageTag: "master"
  imagePullPolicy: IfNotPresent

# Installation mode
installMode:
  type: generic
  multiUser:
    enabled: false

crds:
  install: true
  application: true  

# Cache deployer for generic mode
cacheDeployer:
  enabled: true
  serviceAccount:
    create: true

# Database Configuration 
mysql:
  enabled: false
  auth:
    rootPassword: "dev123"
    username: "dev"
    password: "dev123"
    database: "mlpipeline"
  primary:
    persistence:
      enabled: false
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi

postgresql:
  enabled: false

# Third-party components configuration
thirdParty:
  # Use built-in MySQL instead of external subchart
  mysql:
    enabled: true
  
  # Use built-in MinIO instead of external subchart
  minio:
    enabled: true
    portName: http
  
  # Use built-in Argo instead of external subchart
  argo:
    enabled: true

# Object Storage Configuration - Lightweight MinIO
minio:
  enabled: false
  auth:
    rootUser: "dev"
    rootPassword: "dev123"
  defaultBuckets: "mlpipeline"
  persistence:
    enabled: false
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 250m
      memory: 256Mi

objectStore:
  provider: minio
  secure: false
  bucketName: mlpipeline

# Database names
database:
  pipelinedb: mlpipeline
  metadb: metadb
  cachedb: cachedb

# Pipeline Configuration - Development settings
pipeline:
  cache:
    image: "ghcr.io/containerd/busybox"
    nodeRestrictions: false
    maximumStaleness: ""
    defaultStaleness: ""

# Argo Workflows Configuration - Minimal for dev
argo:
  enabled: false

# Application Configuration
application:
  enabled: true
  controller:
    enabled: true

# Environment Configuration
env:
  platform: platform-agnostic
  gcp:
    proxyAgent:
      enabled: true
      image:
        tag: "master"

# Reduced resources for development
apiServer:
  replicas: 1
  resources:
    requests:
      cpu: 250m
      memory: 500Mi
  env:
    logLevel: "2"
  additionalEnv:
    - name: V2_DRIVER_IMAGE
      value: "ghcr.io/kubeflow/kfp-driver:master"
    - name: V2_LAUNCHER_IMAGE
      value: "ghcr.io/kubeflow/kfp-launcher:master"
    - name: PUBLISH_LOGS
      value: "true"
    - name: LOG_LEVEL
      value: "info"
    - name: PIPELINE_LOG_LEVEL
      value: "1"
    - name: AUTO_UPDATE_PIPELINE_DEFAULT_VERSION
      key: autoUpdatePipelineDefaultVersion
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: OBJECTSTORECONFIG_SECURE
      value: "false"
    - name: OBJECTSTORECONFIG_BUCKETNAME
      key: bucketName
    - name: DBCONFIG_USER
      key: username
    - name: DBCONFIG_PASSWORD
      key: password
    - name: DBCONFIG_DBNAME
      key: pipelineDb
    - name: DBCONFIG_HOST
      key: dbHost
    - name: DBCONFIG_PORT
      key: dbPort
    - name: DBCONFIG_CONMAXLIFETIME
      key: ConMaxLifeTime
    - name: DB_DRIVER_NAME
      key: dbType
    - name: DBCONFIG_MYSQLCONFIG_USER
      key: username
    - name: DBCONFIG_MYSQLCONFIG_PASSWORD
      key: password
    - name: DBCONFIG_MYSQLCONFIG_DBNAME
      key: pipelineDb
    - name: DBCONFIG_MYSQLCONFIG_HOST
      key: mysqlHost
    - name: DBCONFIG_MYSQLCONFIG_PORT
      key: mysqlPort
    - name: OBJECTSTORECONFIG_ACCESSKEY
      key: accesskey
    - name: OBJECTSTORECONFIG_SECRETACCESSKEY
      key: secretkey

persistenceAgent:
  replicas: 1
  resources:
    requests:
      cpu: 120m
      memory: 500Mi
  additionalEnv:
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
scheduledWorkflow:
  replicas: 1
  image:
    repository: kfp-scheduled-workflow-controller
    tag: "master"
  additionalEnv:
    - name: LOG_LEVEL
      value: "info"
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace

ui:
  replicas: 1
  resources:
    requests:
      cpu: 10m
      memory: 70Mi
  additionalEnv:
    - name: VIEWER_TENSORBOARD_POD_TEMPLATE_SPEC_PATH
      value: "/etc/config/viewer-pod-template.json"
    - name: MINIO_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: MINIO_ACCESS_KEY
      key: accesskey
    - name: MINIO_SECRET_KEY
      key: secretkey
    - name: ALLOW_CUSTOM_VISUALIZATIONS
      value: "true"
    - name: FRONTEND_SERVER_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: ARGO_ARCHIVE_LOGS
      value: "true"
    - name: DISABLE_GKE_METADATA
      value: "true"

metadata:
  enabled: true
  grpc:
    replicas: 1
    resources:
  envoy:
    replicas: 1
    resources:
      requests:
        cpu: 10m
        memory: 16Mi
      limits:
        cpu: 50m
        memory: 64Mi

cache:
  server:
    replicas: 1
    resources:
      requests:
        cpu: 50m
        memory: 128Mi
      limits:
        cpu: 200m
        memory: 512Mi
    additionalEnv:
      - name: DEFAULT_CACHE_STALENESS
        key: DEFAULT_CACHE_STALENESS
      - name: MAXIMUM_CACHE_STALENESS
        key: MAXIMUM_CACHE_STALENESS
      - name: CACHE_IMAGE
        key: cacheImage
      - name: CACHE_NODE_RESTRICTIONS
        key: cacheNodeRestrictions
      - name: DBCONFIG_DRIVER
        value: "mysql"
      - name: DBCONFIG_DB_NAME
        key: cacheDb
      - name: DBCONFIG_HOST_NAME
        key: dbHost
      - name: DBCONFIG_PORT
        key: dbPort
      - name: DBCONFIG_USER
        key: username
      - name: DBCONFIG_PASSWORD
        key: password
      - name: NAMESPACE_TO_WATCH
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace

cacheDeployer:
  replicas: 1
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 100m
      memory: 256Mi
visualization:
  replicas: 1
  resources:
    requests:
      cpu: 30m
      memory: 500Mi

viewerCrd:
  replicas: 1
  image:
    pullPolicy: Always
  env:
    maxNumViewers: "10"
  additionalEnv:
    - name: MAX_NUM_VIEWERS
      value: "50"
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
dev:
  # Enable debug mode
  debug: true
  
  # Faster probe intervals for development
  probes:
    readiness:
      initialDelaySeconds: 1
      periodSeconds: 2
    liveness:
      initialDelaySeconds: 5
      periodSeconds: 5
  
  # Development logging
  logging:
    level: debug
    format: text
  
  # Local port forwarding helpers
  portForward:
    ui: 8080
    api: 8888
    minio: 9000

# Monitoring disabled for development
monitoring:
  prometheus:
    enabled: false
  grafana:
    enabled: false

# Service mesh disabled for development
istio:
  enabled: false

# Cert-manager disabled for development
certManager:
  enabled: false

# Development-specific service types
services:
  ui:
    type: NodePort
    nodePort: 30080
  apiServer:
    type: NodePort
    nodePort: 30888

# Node selectors for development 
nodeSelector: {}

# Tolerations for development 
tolerations: []

# Affinity for development 
affinity: {}
