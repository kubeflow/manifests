apiVersion: v1
kind: Service
metadata:
  name: {{ include "kbf.fullname" . }}-ml-pipeline
  labels:
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  {{- include "kbf.labels" . | nindent 4 }}
  annotations:
    prometheus.io/port: "8888"
    prometheus.io/scheme: http
    prometheus.io/scrape: "true"
spec:
  type: {{ .Values.mlPipeline.type }}
  selector:
    app: ml-pipeline
    app.kubernetes.io/component: ml-pipeline
    app.kubernetes.io/name: kubeflow-pipelines
    application-crd-id: kubeflow-pipelines
  {{- include "kbf.selectorLabels" . | nindent 4 }}
  ports:
	{{- .Values.mlPipeline.ports | toYaml | nindent 2 -}}
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: {{ include "kbf.fullname" . }}-ml-pipeline
  labels:
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  {{- include "kbf.labels" . | nindent 4 }}
spec:
  host: ml-pipeline.kubeflow.svc.cluster.local
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: {{ include "kbf.fullname" . }}-ml-pipeline
  labels:
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  {{- include "kbf.labels" . | nindent 4 }}
spec:
  rules:
  - from:
    - source:
        principals:
        - cluster.local/ns/kubeflow/sa/ml-pipeline
        - cluster.local/ns/kubeflow/sa/ml-pipeline-ui
        - cluster.local/ns/kubeflow/sa/ml-pipeline-persistenceagent
        - cluster.local/ns/kubeflow/sa/ml-pipeline-scheduledworkflow
        - cluster.local/ns/kubeflow/sa/ml-pipeline-viewer-crd-service-account
        - cluster.local/ns/kubeflow/sa/kubeflow-pipelines-cache
  - when:
    - key: request.headers[kubeflow-userid]
      notValues:
      - '*'
  selector:
    matchLabels:
      app: ml-pipeline