apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: triggers.eventing.knative.dev
  labels:
    app.kubernetes.io/component: knative-eventing
    eventing.knative.dev/release: v1.8.1
    knative.dev/crd-install: "true"
    kustomize.component: knative
  {{- include "kbf.labels" . | nindent 4 }}
spec:
  group: eventing.knative.dev
  names:
    categories:
    - all
    - knative
    - eventing
    kind: Trigger
    plural: triggers
    singular: trigger
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.broker
      name: Broker
      type: string
    - jsonPath: .status.subscriberUri
      name: Subscriber_URI
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].reason
      name: Reason
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: Trigger represents a request to have events delivered to a subscriber
          from a Broker's event pool.
        properties:
          spec:
            description: Spec defines the desired state of the Trigger.
            properties:
              broker:
                description: Broker is the broker that this trigger receives events
                  from.
                type: string
              delivery:
                description: Delivery contains the delivery spec for this specific trigger.
                properties:
                  backoffDelay:
                    description: 'BackoffDelay is the delay before retrying. More information
                      on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html
                      - https://en.wikipedia.org/wiki/ISO_8601  For linear policy, backoff
                      delay is backoffDelay*<numberOfRetries>. For exponential policy,
                      backoff delay is backoffDelay*2^<numberOfRetries>.'
                    type: string
                  backoffPolicy:
                    description: BackoffPolicy is the retry backoff policy (linear,
                      exponential).
                    type: string
                  deadLetterSink:
                    description: DeadLetterSink is the sink receiving event that could
                      not be sent to a destination.
                    properties:
                      ref:
                        description: Ref points to an Addressable.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                              This is optional field, it gets defaulted to the object
                              holding it if left out.'
                            type: string
                        type: object
                      uri:
                        description: URI can be an absolute URL(non-empty scheme and
                          non-empty host) pointing to the target or a relative URI.
                          Relative URIs will be resolved using the base URI retrieved
                          from Ref.
                        type: string
                    type: object
                  retry:
                    description: Retry is the minimum number of retries the sender should
                      attempt when sending an event before moving it to the dead letter
                      sink.
                    format: int32
                    type: integer
                type: object
                x-kubernetes-preserve-unknown-fields: true
              filter:
                description: 'Filter is the filter to apply against all events from
                  the Broker. Only events that pass this filter will be sent to the
                  Subscriber. If not specified, will default to allowing all events. '
                properties:
                  attributes:
                    description: 'Attributes filters events by exact match on event
                      context attributes. Each key in the map is compared with the equivalent
                      key in the event context. An event passes the filter if all values
                      are equal to the specified values.  Nested context attributes
                      are not supported as keys. Only string values are supported. '
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                type: object
              subscriber:
                description: Subscriber is the addressable that receives events from
                  the Broker that pass the Filter. It is required.
                properties:
                  ref:
                    description: Ref points to an Addressable.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          This is optional field, it gets defaulted to the object holding
                          it if left out.'
                        type: string
                    type: object
                  uri:
                    description: URI can be an absolute URL(non-empty scheme and non-empty
                      host) pointing to the target or a relative URI. Relative URIs
                      will be resolved using the base URI retrieved from Ref.
                    type: string
                type: object
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            description: Status represents the current state of the Trigger. This data
              may be out of date.
            properties:
              annotations:
                description: Annotations is additional Status fields for the Resource
                  to save some additional State as well as convey more information to
                  the user. This is roughly akin to Annotations on any k8s resource,
                  just the reconciler conveying richer information outwards.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              conditions:
                description: Conditions the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another. We use VolatileTime
                        in place of metav1.Time to exclude this from creating equality.Semantic
                        differences (all other things held constant).
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    severity:
                      description: Severity with which to treat failures of this type
                        of condition. When this is not specified, it defaults to Error.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
              deadLetterSinkUri:
                description: DeadLetterSinkURI is the resolved URI of the dead letter
                  sink for this Trigger, in case there is none this will fallback to
                  it's Broker status DeadLetterSinkURI.
                type: string
              observedGeneration:
                description: ObservedGeneration is the 'Generation' of the Service that
                  was last processed by the controller.
                format: int64
                type: integer
              subscriberUri:
                description: SubscriberURI is the resolved URI of the receiver for this
                  Trigger.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []