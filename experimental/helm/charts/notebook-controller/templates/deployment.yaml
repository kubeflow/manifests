{{- if .Values.controller.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "notebook-controller.resourceName" . }}-deployment
  namespace: {{ include "notebook-controller.namespace" . }}
  labels:
    {{- if and .Values.kustomizeMode.enabled .Values.kustomizeMode.useOriginalLabels }}
    app: notebook-controller
    kustomize.component: notebook-controller
    {{- else }}
    {{- include "notebook-controller.labels" . | nindent 4 }}
    {{- end }}
    {{- with .Values.controller.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- $annotations := include "notebook-controller.annotations" . }}
  {{- if $annotations }}
  annotations:
    {{- $annotations | nindent 4 }}
  {{- end }}
spec:
  {{- if not (and .Values.kustomizeMode.enabled .Values.kustomizeMode.useOriginalNames) }}
  replicas: {{ .Values.controller.replicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "notebook-controller.deploymentSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "notebook-controller.deploymentSelectorLabels" . | nindent 8 }}
        {{- with .Values.commonLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.controller.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if not (and .Values.kustomizeMode.enabled .Values.kustomizeMode.useOriginalNames) }}
      {{- $podAnnotations := include "notebook-controller.podAnnotations" . }}
      {{- if $podAnnotations }}
      annotations:
        {{- $podAnnotations | nindent 8 }}
      {{- end }}
      {{- end }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "notebook-controller.serviceAccountName" . }}
      {{- with .Values.controller.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.initContainers.additional }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      {{- if .Values.controller.authProxy.enabled }}
      - name: kube-rbac-proxy
        image: {{ include "notebook-controller.authProxyImage" . }}
        imagePullPolicy: {{ .Values.controller.authProxy.image.pullPolicy }}
        args:
          {{- toYaml .Values.controller.authProxy.args | nindent 10 }}
        ports:
        - containerPort: {{ .Values.controller.authProxy.port }}
          name: https
          protocol: TCP
        {{- with .Values.controller.authProxy.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.controller.authProxy.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- end }}
      - name: {{ include "notebook-controller.managerContainerName" . }}
        image: {{ include "notebook-controller.image" . }}
        {{- if .Values.controller.manager.command }}
        command:
          {{- toYaml .Values.controller.manager.command | nindent 10 }}
        {{- else }}
        command:
        - /manager
        {{- end }}
        {{- if not (and .Values.kustomizeMode.enabled .Values.kustomizeMode.useOriginalNames) }}
        {{- if or .Values.controller.manager.args .Values.controller.manager.enableLeaderElection .Values.controller.authProxy.enabled .Values.controller.manager.healthProbeAddr }}
        args:
        {{- if .Values.controller.manager.enableLeaderElection }}
        - "--enable-leader-election"
        {{- end }}
        {{- if .Values.controller.authProxy.enabled }}
        - "--metrics-addr={{ .Values.controller.manager.metricsAddr }}"
        {{- else }}
        - "--metrics-addr=0.0.0.0:{{ .Values.controller.ports.metrics }}"
        {{- end }}
        {{- if .Values.controller.manager.healthProbeAddr }}
        - "--health-probe-bind-address={{ .Values.controller.manager.healthProbeAddr }}"
        {{- end }}
        {{- with .Values.controller.manager.args }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- end }}
        {{- end }}
        env:
        {{- include "notebook-controller.envVars" . | nindent 8 }}
        imagePullPolicy: {{ include "notebook-controller.imagePullPolicy" . }}
        {{- if not (and .Values.kustomizeMode.enabled .Values.kustomizeMode.useOriginalNames) }}
        ports:
        {{- if not .Values.controller.authProxy.enabled }}
        - containerPort: {{ .Values.controller.ports.metrics }}
          name: metrics
          protocol: TCP
        {{- end }}
        - containerPort: {{ .Values.controller.ports.health }}
          name: health
          protocol: TCP
        {{- if .Values.controller.webhook.enabled }}
        - containerPort: {{ .Values.controller.webhook.port }}
          name: webhook-server
          protocol: TCP
        {{- end }}
        {{- end }}
        {{- with .Values.controller.livenessProbe }}
        livenessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.controller.readinessProbe }}
        readinessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.controller.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.controller.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- if or .Values.controller.webhook.enabled .Values.volumeMounts.additional }}
        volumeMounts:
        {{- if .Values.controller.webhook.enabled }}
        - mountPath: {{ .Values.controller.webhook.certMountPath }}
          name: cert
          readOnly: true
        {{- end }}
        {{- with .Values.volumeMounts.additional }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- end }}
      {{- with .Values.sidecars.additional }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- if or .Values.controller.webhook.enabled .Values.volumes.additional }}
      volumes:
      {{- if .Values.controller.webhook.enabled }}
      - name: cert
        secret:
          defaultMode: {{ .Values.controller.webhook.certVolumeMode }}
          secretName: {{ .Values.controller.webhook.certSecretName }}
      {{- end }}
      {{- with .Values.volumes.additional }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- end }}
      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}