{{- if and .Values.thirdParty.postgresql.enabled (not .Values.postgresql.enabled) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: {{ include "kubeflow-pipelines.namespace" . }}
  labels:
    app: postgres
    application-crd-id: kubeflow-pipelines
spec:
  selector:
    matchLabels:
      app: postgres
      application-crd-id: kubeflow-pipelines
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgres
        application-crd-id: kubeflow-pipelines
    spec:
      serviceAccountName: postgresql
      containers:
        - image: {{ .Values.thirdParty.postgresql.image.repository }}:{{ .Values.thirdParty.postgresql.image.tag }}
          name: postgres
          env:
            - name: POSTGRES_DB
              value: {{ .Values.thirdParty.postgresql.database | default "postgres" }}
            - name: POSTGRES_USER
              value: {{ .Values.thirdParty.postgresql.username | default "user" }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.thirdParty.postgresql.secretName | default "postgres-secret" }}
                  key: {{ .Values.thirdParty.postgresql.secretKey | default "root_password" }}
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          ports:
            - containerPort: 5432
              name: postgres
          readinessProbe:
            exec:
              command: ["psql", "-U", "{{ .Values.thirdParty.postgresql.username | default "user" }}", "-d", "{{ .Values.thirdParty.postgresql.database | default "postgres" }}", "-c", "SELECT 1"]
            initialDelaySeconds: 15
            timeoutSeconds: 2
          volumeMounts:
            - name: postgres-stateful-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-stateful-data
          persistentVolumeClaim:
            claimName: postgres-pvc
{{- end }}