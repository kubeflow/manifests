apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: aws-alb-ingress-controller
    app.kubernetes.io/instance: aws-alb-ingress-controller-v0.7.0
    app.kubernetes.io/managed-by: kfctl
    app.kubernetes.io/name: aws-alb-ingress-controller
    app.kubernetes.io/part-of: kubeflow
    app.kubernetes.io/version: v0.7.0
    kustomize.component: aws-alb-ingress-controller
  name: alb-ingress-controller
  namespace: kubeflow
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: aws-alb-ingress-controller
      app.kubernetes.io/instance: aws-alb-ingress-controller-v0.7.0
      app.kubernetes.io/managed-by: kfctl
      app.kubernetes.io/name: aws-alb-ingress-controller
      app.kubernetes.io/part-of: kubeflow
      app.kubernetes.io/version: v0.7.0
      kustomize.component: aws-alb-ingress-controller
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app.kubernetes.io/component: aws-alb-ingress-controller
        app.kubernetes.io/instance: aws-alb-ingress-controller-v0.7.0
        app.kubernetes.io/managed-by: kfctl
        app.kubernetes.io/name: aws-alb-ingress-controller
        app.kubernetes.io/part-of: kubeflow
        app.kubernetes.io/version: v0.7.0
        kustomize.component: aws-alb-ingress-controller
    spec:
      containers:
      - args:
        - --ingress-class=alb
        - --cluster-name=
        image: docker.io/amazon/aws-alb-ingress-controller:v1.1.5
        imagePullPolicy: Always
        name: alb-ingress-controller
      serviceAccountName: alb-ingress-controller
