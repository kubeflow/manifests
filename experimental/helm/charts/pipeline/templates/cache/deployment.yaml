{{- if .Values.cache.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kubeflow-pipelines.fullname" . }}-cache-server
  namespace: {{ include "kubeflow-pipelines.namespace" . }}
  labels:
    {{- include "kubeflow-pipelines.labels" . | nindent 4 }}
    app: cache-server
    component: cache-server
  annotations:
    {{- include "kubeflow-pipelines.annotations" . | nindent 4 }}
spec:
  replicas: {{ .Values.cache.server.replicas }}
  selector:
    matchLabels:
      {{- include "kubeflow-pipelines.selectorLabels" . | nindent 6 }}
      app: cache-server
      component: cache-server
  template:
    metadata:
      labels:
        {{- include "kubeflow-pipelines.selectorLabels" . | nindent 8 }}
        app: cache-server
        component: cache-server
      annotations:
        {{- include "kubeflow-pipelines.annotations" . | nindent 8 }}
    spec:
      {{- include "kubeflow-pipelines.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "kubeflow-pipelines.cache.serviceAccountName" . }}
      securityContext:
        {{- if .Values.security.seccompProfile }}
        seccompProfile:
          type: {{ .Values.security.seccompProfile.type }}
        {{- end }}
      containers:
      - name: server
        image: {{ include "kubeflow-pipelines.image" (dict "repository" .Values.cache.server.image.repository "tag" .Values.cache.server.image.tag "context" .) }}
        imagePullPolicy: {{ .Values.cache.server.image.pullPolicy | default .Values.global.imagePullPolicy }}
        env:
        {{- include "kubeflow-pipelines.commonEnv" . | nindent 8 }}
        {{- include "kubeflow-pipelines.databaseEnv" . | nindent 8 }}
        - name: DEFAULT_CACHE_STALENESS
          value: {{ .Values.pipeline.cache.defaultStaleness | quote }}
        - name: MAXIMUM_CACHE_STALENESS
          value: {{ .Values.pipeline.cache.maximumStaleness | quote }}
        - name: CACHE_IMAGE
          value: {{ .Values.pipeline.cache.image | quote }}
        - name: CACHE_NODE_RESTRICTIONS
          value: {{ .Values.pipeline.cache.nodeRestrictions | quote }}
        - name: DBCONFIG_DRIVER
          value: {{ .Values.externalDatabase.type | default "mysql" }}
        - name: DBCONFIG_DB_NAME
          value: {{ .Values.database.cachedb }}
        - name: DBCONFIG_HOST_NAME
          value: {{ include "kubeflow-pipelines.database.host" . }}
        - name: DBCONFIG_PORT
          value: {{ include "kubeflow-pipelines.database.port" . | quote }}
        - name: NAMESPACE_TO_WATCH
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: WEBHOOK_PORT
          value: "8443"
        {{- with .Values.cache.server.additionalEnv }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        args:
        - "--db_driver=$(DBCONFIG_DRIVER)"
        - "--db_host=$(DBCONFIG_HOST_NAME)"
        - "--db_port=$(DBCONFIG_PORT)"
        - "--db_name=$(DBCONFIG_DB_NAME)"
        - "--db_user=$(DBCONFIG_USER)"
        - "--db_password=$(DBCONFIG_PASSWORD)"
        - "--namespace_to_watch=$(NAMESPACE_TO_WATCH)"
        - "--listen_port=$(WEBHOOK_PORT)"
        ports:
        - name: webhook-api
          containerPort: 8443
          protocol: TCP
        volumeMounts:
        - name: webhook-tls-certs
          mountPath: /etc/webhook/certs
          readOnly: true
        securityContext:
          {{- toYaml .Values.cache.server.securityContext | nindent 10 }}
        resources:
          {{- toYaml .Values.cache.server.resources | nindent 10 }}
      volumes:
      - name: webhook-tls-certs
        secret:
          secretName: {{ include "kubeflow-pipelines.fullname" . }}-webhook-server-tls
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
