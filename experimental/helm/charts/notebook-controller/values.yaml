# -- String to partially override release name.
nameOverride: ""

# -- String to fully override release name.
fullnameOverride: ""

# -- Common labels to add to the resources.
commonLabels:
  app: notebook-controller
  kustomize.component: notebook-controller

# -- Common annotations to add to the resources.
commonAnnotations: {}

# Global settings
global:
  # -- Namespace to install Notebook Controller
  namespace: kubeflow
  # -- Image registry for Notebook Controller images
  imageRegistry: ghcr.io/kubeflow/kubeflow
  # -- Global image tag for the notebook controller
  imageTag: v1.10.0
  # -- Global image pull policy
  imagePullPolicy: IfNotPresent
  # -- Global image pull secrets
  imagePullSecrets: []

# -- Deployment mode configuration (kubeflow or standalone)
deploymentMode: kubeflow

# Namespace configuration
namespace:
  # -- Create namespace
  create: true

# Controller configuration
controller:
  # -- Enable the Notebook Controller
  enabled: true
  # -- Number of controller replicas
  replicas: 1
  
  image:
    # -- Controller image repository
    repository: notebook-controller
    # -- Controller image tag (overrides global.imageTag if set)
    tag: ""
    # -- Controller image pull policy (overrides global.imagePullPolicy if set)
    pullPolicy: ""
  
  # Manager arguments and configuration
  manager:
    # -- Enable leader election
    enableLeaderElection: true
    # -- Metrics bind address
    metricsAddr: "127.0.0.1:8080"
    # -- Health probe bind address
    healthProbeAddr: ":8081"
    # -- Additional manager arguments
    args: []
    # -- Manager command (overrides default)
    command: []
  
  # Environment configuration
  config:
    # -- Enable Istio integration
    useIstio: true
    # -- Istio gateway for Kubeflow mode
    istioGateway: "kubeflow/kubeflow-gateway"
    # -- Istio host configuration
    istioHost: "*"
    # -- Cluster domain
    clusterDomain: "cluster.local"
    # -- Enable notebook culling
    enableCulling: false
    # -- Cull idle time (in minutes - note: original uses minutes without suffix)
    cullIdleTime: "1440"
    # -- Idleness check period (in minutes)
    idlenessCheckPeriod: "1"
  
  # Auth proxy (kube-rbac-proxy) configuration
  authProxy:
    # -- Enable auth proxy sidecar
    enabled: false
    image:
      # -- Auth proxy image registry
      registry: quay.io
      # -- Auth proxy image repository
      repository: brancz/kube-rbac-proxy
      # -- Auth proxy image tag
      tag: v0.4.0
      # -- Auth proxy image pull policy
      pullPolicy: IfNotPresent
    # -- Auth proxy arguments
    args:
    - "--secure-listen-address=0.0.0.0:8443"
    - "--upstream=http://127.0.0.1:8080/"
    - "--logtostderr=true"
    - "--v=10"
    # -- Auth proxy port
    port: 8443
    # -- Auth proxy resource requests and limits
    resources: {}
    # -- Auth proxy security context
    securityContext: {}
  
  # Webhook server configuration
  webhook:
    # -- Enable webhook server
    enabled: false
    # -- Webhook server port
    port: 443
    # -- Webhook certificate secret name
    certSecretName: webhook-server-cert
    # -- Webhook certificate mount path
    certMountPath: /tmp/k8s-webhook-server/serving-certs
    # -- Webhook certificate volume mode
    certVolumeMode: 420
  
  # Ports configuration
  ports:
    # -- Manager metrics port (when auth proxy disabled)
    metrics: 8080
    # -- Manager health check port
    health: 8081
    # -- HTTPS port (when auth proxy enabled)
    https: 8443
    # -- Webhook server port
    webhook: 443
  
  # -- Controller resource requests and limits
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  
  # Security context
  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault
  
  securityContext:
    runAsNonRoot: true
    allowPrivilegeEscalation: false
    runAsUser: 1000
    capabilities:
      drop:
      - ALL
  
  # Probes configuration
  livenessProbe:
    httpGet:
      path: /healthz
      port: 8081
    initialDelaySeconds: 5
    periodSeconds: 10
    
  readinessProbe:
    httpGet:
      path: /readyz
      port: 8081
    initialDelaySeconds: 5
    periodSeconds: 10
  
  # -- Node selector for controller pods
  nodeSelector: {}
  
  # -- Tolerations for controller pods
  tolerations: []
  
  # -- Affinity rules for controller pods
  affinity: {}
  
  # -- Extra labels for controller pods
  labels: {}
  
  # -- Extra annotations for controller pods
  annotations: {}

# RBAC configuration
rbac:
  # -- Create RBAC resources
  create: true
  
  # Service account configuration
  serviceAccount:
    # -- Create service account
    create: true
    # -- Service account name (auto-generated if empty)
    name: ""
    # -- Service account annotations
    annotations: {}
  
  # Cluster-wide permissions
  clusterRole:
    # -- Create cluster role
    create: true
    # -- Additional cluster role rules
    rules: []
  
  # Namespace-specific permissions
  role:
    # -- Create namespace role
    create: true
    # -- Additional role rules
    rules: []
  
  # Auth proxy configuration
  authProxy:
    # -- Enable auth proxy RBAC
    enabled: true
    
  # Leader election configuration
  leaderElection:
    # -- Enable leader election RBAC
    enabled: true

# Service configuration
service:
  # -- Enable service creation
  enabled: true
  # -- Service type
  type: ClusterIP
  # -- Service port
  port: 443
  # -- Service target port
  targetPort: 8443
  # -- Service annotations
  annotations: {}
  # -- Service labels
  labels: {}

# Metrics service configuration (for auth proxy)
metricsService:
  # -- Enable metrics service (typically used with auth proxy)
  enabled: false
  # -- Service name override
  name: ""
  # -- Service type
  type: ClusterIP
  # -- Service port
  port: 8443
  # -- Service target port
  targetPort: https
  # -- Service annotations
  annotations:
    prometheus.io/port: "8443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  # -- Service labels
  labels:
    control-plane: controller-manager

# CRD configuration
crds:
  # -- Install CRDs
  install: true
  # CRD validation patches
  validationPatches:
    # -- Enable CRD validation patches
    enabled: true
  # Webhook configuration
  webhook:
    # -- Enable webhook configuration (disabled by default)
    enabled: false

# Monitoring configuration
monitoring:
  # -- Enable monitoring
  enabled: false
  
  # Prometheus metrics configuration
  prometheus:
    # -- Enable Prometheus metrics
    enabled: false
    # -- Prometheus scrape annotations on pods
    podAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8080"
      prometheus.io/path: "/metrics"
  
  # -- ServiceMonitor configuration (for Prometheus Operator)
  serviceMonitor:
    # -- Create ServiceMonitor
    enabled: false
    # -- ServiceMonitor namespace (defaults to release namespace)
    namespace: ""
    # -- ServiceMonitor labels
    labels: {}
    # -- ServiceMonitor annotations
    annotations: {}
    # -- ServiceMonitor selector
    selector: {}
    # -- ServiceMonitor endpoints
    endpoints:
    - port: https
      scheme: https
      interval: 30s
      path: /metrics
  
  # -- PodMonitor configuration (alternative to ServiceMonitor)
  podMonitor:
    # -- Create PodMonitor
    enabled: false
    # -- PodMonitor namespace (defaults to release namespace)
    namespace: ""
    # -- PodMonitor labels
    labels: {}
    # -- PodMonitor annotations
    annotations: {}
    # -- PodMonitor selector
    selector: {}
    # -- PodMonitor endpoints
    endpoints:
    - port: metrics
      interval: 30s
      path: /metrics

# Volume configuration
volumes:
  # -- Additional volumes for the controller pod
  additional: []
  # Example:
  # - name: custom-config
  #   configMap:
  #     name: custom-config

# Volume mounts configuration  
volumeMounts:
  # -- Additional volume mounts for the controller container
  additional: []
  # Example:
  # - name: custom-config
  #   mountPath: /etc/custom-config
  #   readOnly: true

# Environment variables
env:
  # -- Additional environment variables for the controller container
  additional: []
  # Example:
  # - name: CUSTOM_VAR
  #   value: "custom-value"
  # - name: SECRET_VAR
  #   valueFrom:
  #     secretKeyRef:
  #       name: my-secret
  #       key: secret-key

# Init containers configuration
initContainers:
  # -- Additional init containers
  additional: []

# Sidecar containers configuration  
sidecars:
  # -- Additional sidecar containers
  additional: []

# Pod disruption budget
podDisruptionBudget:
  # -- Enable pod disruption budget
  enabled: false
  # -- Minimum available pods
  minAvailable: 1
  # -- Maximum unavailable pods (alternative to minAvailable)
  maxUnavailable: ""
  # -- Additional labels for PDB
  labels: {}
  # -- Additional annotations for PDB
  annotations: {}

# Horizontal Pod Autoscaler
autoscaling:
  # -- Enable horizontal pod autoscaler
  enabled: false
  # -- Minimum number of replicas
  minReplicas: 1
  # -- Maximum number of replicas
  maxReplicas: 10
  # -- Target CPU utilization percentage
  targetCPUUtilizationPercentage: 80
  # -- Target memory utilization percentage
  targetMemoryUtilizationPercentage: ""
  # -- Additional metrics for HPA
  metrics: []
  # -- HPA behavior configuration
  behavior: {}

# Network policies
networkPolicies:
  # -- Enable network policies
  enabled: false
  # -- Ingress rules
  ingress: []
  # -- Egress rules  
  egress: []
  # -- Policy types
  policyTypes:
  - Ingress
  - Egress

# Certificate management (for webhooks)
certificates:
  # -- Enable certificate management
  enabled: false
  # -- Certificate issuer (cert-manager)
  issuer: ""
  # -- Certificate duration
  duration: "8760h" # 1 year
  # -- Certificate renewal before expiry
  renewBefore: "720h" # 30 days
  # -- Certificate subject
  subject:
    organizations: []
    countries: []
    localities: []
    provinces: []
  # -- Certificate DNS names
  dnsNames: []
  # -- Certificate IP addresses
  ipAddresses: []

# Sample notebook resources
samples:
  # -- Create sample notebook resources
  enabled: false
  # -- Namespace for sample notebooks
  namespace: "default"
  # -- Default image for sample notebooks
  image: "ghcr.io/kubeflow/kubeflow/notebook-servers/jupyter:latest"
  # -- Resource requests and limits for sample notebooks
  resources: {}

# Kustomize compatibility mode
kustomizeMode:
  # -- Enable Kustomize compatibility features
  enabled: false
  # -- Use original naming conventions
  useOriginalNames: false
  # -- Include namespace in resource names
  includeNamespace: false
  # -- Use original label selectors
  useOriginalLabels: false