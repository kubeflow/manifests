# Platform-Agnostic Multi-User Configuration - Enhanced
# This configuration provides platform-agnostic multi-user deployment

global:
  namespace: kubeflow
  imageRegistry: ghcr.io/kubeflow
  imageTag: "2.14.3"
  imagePullPolicy: Always

# Installation mode - Multi-user enabled with legacy labels
installMode:
  type: multi-user
  multiUser:
    enabled: true
    profileController:
      enabled: true
  # Legacy mode enabled - includes application-crd-id label 
  legacyLabels: true

# Database Configuration - Enhanced for multi-user
mysql:
  enabled: false
  auth:
    rootPassword: "root123"
    username: "mlpipeline"
    password: "mlpipeline123"
    database: "mlpipeline"
  primary:
    persistence:
      enabled: true
      size: 50Gi
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 1
        memory: 2Gi

postgresql:
  enabled: false

# Object Storage Configuration - Enhanced for multi-user
minio:
  enabled: false
  auth:
    rootUser: "minio"
    rootPassword: "minio123"
  defaultBuckets: "mlpipeline"
  persistence:
    enabled: true
    size: 100Gi
  resources:
    requests:
      cpu: 250m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 1Gi

objectStore:
  provider: minio
  secure: false
  bucketName: mlpipeline

# Database names
database:
  pipelinedb: mlpipeline
  metadb: metadb
  cachedb: cachedb

# Pipeline Configuration
pipeline:
  cache:
    image: "ghcr.io/containerd/busybox"
    nodeRestrictions: false
    maximumStaleness: ""
    defaultStaleness: ""

# Argo Workflows Configuration 
argo:
  enabled: false

# Built-in third-party components
thirdParty:
  argo:
    enabled: true
  mysql:
    enabled: true
  minio:
    enabled: true
    portName: http
  metacontroller:
    enabled: true

# Application Configuration
application:
  enabled: false
  controller:
    enabled: false

# Metadata (MLMD) Configuration
metadata:
  enabled: true
  grpc:
    resources:

# Environment Configuration
env:
  platform: platform-agnostic

# Enhanced RBAC Configuration
rbac:
  create: true
  multiUser:
    enabled: true

# Multi-user API Server configuration
apiServer:
  env:
    publishLogs: true
    pipelineLogLevel: "1"
    autoUpdatePipelineDefaultVersion: true
    v2DriverImage: "ghcr.io/kubeflow/kfp-driver:2.14.3"
    v2LauncherImage: "ghcr.io/kubeflow/kfp-launcher:2.14.3"
    multiUser: true
  
  additionalEnv:
    - name: KUBEFLOW_USERID_HEADER
      value: "kubeflow-userid"
    - name: KUBEFLOW_USERID_PREFIX
      value: ""
    - name: PUBLISH_LOGS
      value: "true"
    - name: LOG_LEVEL
      value: "info"
    - name: PIPELINE_LOG_LEVEL
      value: "1"
    - name: AUTO_UPDATE_PIPELINE_DEFAULT_VERSION
      key: autoUpdatePipelineDefaultVersion
      configMapName: pipeline-install-config
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: OBJECTSTORECONFIG_SECURE
      value: "false"
    - name: OBJECTSTORECONFIG_BUCKETNAME
      key: bucketName
      configMapName: pipeline-install-config
    - name: DBCONFIG_USER
      key: username
      secretName: mysql-secret
    - name: DBCONFIG_PASSWORD
      key: password
      secretName: mysql-secret
    - name: DBCONFIG_DBNAME
      key: pipelineDb
      configMapName: pipeline-install-config
    - name: DBCONFIG_HOST
      key: dbHost
      configMapName: pipeline-install-config
    - name: DBCONFIG_PORT
      key: dbPort
      configMapName: pipeline-install-config
    - name: DBCONFIG_CONMAXLIFETIME
      key: ConMaxLifeTime
      configMapName: pipeline-install-config
    - name: DB_DRIVER_NAME
      key: dbType
      configMapName: pipeline-install-config
    - name: DBCONFIG_MYSQLCONFIG_USER
      key: username
      secretName: mysql-secret
    - name: DBCONFIG_MYSQLCONFIG_PASSWORD
      key: password
      secretName: mysql-secret
    - name: DBCONFIG_MYSQLCONFIG_DBNAME
      key: pipelineDb
      configMapName: pipeline-install-config
    - name: DBCONFIG_MYSQLCONFIG_HOST
      key: mysqlHost
      configMapName: pipeline-install-config
    - name: DBCONFIG_MYSQLCONFIG_PORT
      key: mysqlPort
      configMapName: pipeline-install-config
    - name: OBJECTSTORECONFIG_ACCESSKEY
      key: accesskey
      secretName: mlpipeline-minio-artifact
    - name: OBJECTSTORECONFIG_SECRETACCESSKEY
      key: secretkey
      secretName: mlpipeline-minio-artifact
    - name: V2_DRIVER_IMAGE
      value: "ghcr.io/kubeflow/kfp-driver:2.14.3"
    - name: V2_LAUNCHER_IMAGE
      value: "ghcr.io/kubeflow/kfp-launcher:2.14.3"

# Enhanced UI configuration
ui:
  additionalEnv:
    - name: VIEWER_TENSORBOARD_POD_TEMPLATE_SPEC_PATH
      value: "/etc/config/viewer-pod-template.json"
    - name: DEPLOYMENT
      value: "KUBEFLOW"
    - name: ARTIFACTS_SERVICE_PROXY_NAME
      value: "ml-pipeline-ui-artifact"
    - name: ARTIFACTS_SERVICE_PROXY_PORT
      value: "80"
    - name: ARTIFACTS_SERVICE_PROXY_ENABLED
      value: "true"
    - name: ENABLE_AUTHZ
      value: "true"
    - name: KUBEFLOW_USERID_HEADER
      value: "kubeflow-userid"
    - name: KUBEFLOW_USERID_PREFIX
      key: null
    - name: MINIO_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: MINIO_ACCESS_KEY
      key: accesskey
    - name: MINIO_SECRET_KEY
      key: secretkey
    - name: ALLOW_CUSTOM_VISUALIZATIONS
      value: "true"
    - name: FRONTEND_SERVER_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: ARGO_ARCHIVE_LOGS
      value: "true"
    - name: DISABLE_GKE_METADATA
      value: "true"

persistenceAgent:
  resources:
    requests:
      cpu: 120m
      memory: 500Mi
  additionalEnv:
    - name: NAMESPACE
      value: ""

scheduledWorkflow:
  additionalEnv:
    - name: NAMESPACE
      value: ''
    - name: LOG_LEVEL
      value: "info"
      valueFrom: null

cache:
  server:
    additionalEnv:
      - name: NAMESPACE_TO_WATCH
        key: null
      - name: DEFAULT_CACHE_STALENESS
        key: DEFAULT_CACHE_STALENESS
      - name: MAXIMUM_CACHE_STALENESS
        key: MAXIMUM_CACHE_STALENESS
      - name: CACHE_IMAGE
        key: cacheImage
      - name: CACHE_NODE_RESTRICTIONS
        key: cacheNodeRestrictions
      - name: DBCONFIG_DRIVER
        value: "mysql"
      - name: DBCONFIG_DB_NAME
        key: cacheDb
      - name: DBCONFIG_HOST_NAME
        key: dbHost
      - name: DBCONFIG_PORT
        key: dbPort
      - name: DBCONFIG_USER
        key: username
      - name: DBCONFIG_PASSWORD
        key: password

viewerCrd:
  env:
    maxNumViewers: ""
  additionalEnv:
    - name: NAMESPACE
      value: ""
    - name: MAX_NUM_VIEWERS
      value: 50

# Profile Controller Configuration
profileController:
  enabled: true
  replicas: 1
  
  image:
    repository: public.ecr.aws/docker/library/python
    tag: "3.12"
    pullPolicy: IfNotPresent
  
  additionalEnv:
    - name: KFP_VERSION
      key: appVersion
    - name: KFP_DEFAULT_PIPELINE_ROOT
      key: defaultPipelineRoot
    - name: MINIO_ACCESS_KEY
      key: accesskey
    - name: MINIO_SECRET_KEY
      key: secretkey
  
  resources:
    requests:
      cpu: 100m
      memory: 200Mi
    limits:
      cpu: 500m
      memory: 1Gi
  
  service:
    type: ClusterIP
    port: 80
  
  disableIstioSidecar: "true"
  
  
  securityContext:
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 0
    capabilities:
      drop:
        - ALL
    seccompProfile:
      type: RuntimeDefault

# Istio configuration for multi-user
istio:
  enabled: true

# Networking configuration
networking:
  istio:
    enabled: true
    gateway: "kubeflow-gateway"
    host: "*"

