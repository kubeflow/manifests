{{- if .Values.sparkOperator.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spark-operator-webhook
  labels:
    helm.sh/chart: spark-operator-2.2.0
    app.kubernetes.io/name: spark-operator
    app.kubernetes.io/instance: spark-operator
    app.kubernetes.io/version: 2.2.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: webhook
  namespace: '{{ include "kubeflow.namespace" . }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: spark-operator
      app.kubernetes.io/instance: spark-operator
      app.kubernetes.io/component: webhook
  template:
    metadata:
      labels:
        app.kubernetes.io/name: spark-operator
        app.kubernetes.io/instance: spark-operator
        app.kubernetes.io/component: webhook
        sidecar.istio.io/inject: 'false'
    spec:
      containers:
      - name: spark-operator-webhook
        image: ghcr.io/kubeflow/spark-operator/controller:2.2.0
        imagePullPolicy: IfNotPresent
        args:
        - webhook
        - start
        - --zap-log-level=info
        - --namespaces=""
        - --webhook-secret-name=spark-operator-webhook-certs
        - --webhook-secret-namespace=kubeflow
        - --webhook-svc-name=spark-operator-webhook-svc
        - --webhook-svc-namespace=kubeflow
        - --webhook-port=9443
        - --mutating-webhook-name=spark-operator-webhook
        - --validating-webhook-name=spark-operator-webhook
        - --enable-metrics=true
        - --metrics-bind-address=:8080
        - --metrics-endpoint=/metrics
        - --metrics-prefix=
        - --metrics-labels=app_type
        - --leader-election=true
        - --leader-election-lock-name=spark-operator-webhook-lock
        - --leader-election-lock-namespace=kubeflow
        ports:
        - name: webhook
          containerPort: 9443
        - name: metrics
          containerPort: 8080
        volumeMounts:
        - mountPath: /etc/k8s-webhook-server/serving-certs
          name: serving-certs
          readOnly: false
          subPath: serving-certs
        livenessProbe:
          httpGet:
            port: 8081
            scheme: HTTP
            path: /healthz
        readinessProbe:
          httpGet:
            port: 8081
            scheme: HTTP
            path: /readyz
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
      volumes:
      - emptyDir:
          sizeLimit: 500Mi
        name: serving-certs
      serviceAccountName: spark-operator-webhook
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 185
{{- end }}
