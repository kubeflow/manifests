{{- if .Values.metadata.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metadata-grpc-deployment
  namespace: {{ include "kubeflow-pipelines.namespace" . }}
  labels:
    application-crd-id: kubeflow-pipelines
    component: metadata-grpc-server
spec:
  replicas: {{ .Values.metadata.grpc.replicas }}
  selector:
    matchLabels:
      component: metadata-grpc-server
      application-crd-id: kubeflow-pipelines
  template:
    metadata:
      labels:
        component: metadata-grpc-server
        application-crd-id: kubeflow-pipelines
    spec:
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: metadata-grpc-server
      containers:
      - name: container
        image: {{ .Values.metadata.grpc.image.repository }}:{{ .Values.metadata.grpc.image.tag }}
        env:
        - name: DBCONFIG_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: mysql-secret
        - name: DBCONFIG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mysql-secret
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              key: mlmdDb
              name: pipeline-install-config
        - name: MYSQL_HOST
          valueFrom:
            configMapKeyRef:
              key: dbHost
              name: pipeline-install-config
        - name: MYSQL_PORT
          valueFrom:
            configMapKeyRef:
              key: dbPort
              name: pipeline-install-config
        command: ["/bin/metadata_store_server"]
        args: 
        - "--grpc_port=8080"
        - "--mysql_config_database=$(MYSQL_DATABASE)"
        - "--mysql_config_host=$(MYSQL_HOST)"
        - "--mysql_config_port=$(MYSQL_PORT)"
        - "--mysql_config_user=$(DBCONFIG_USER)"
        - "--mysql_config_password=$(DBCONFIG_PASSWORD)"
        - "--enable_database_upgrade=true"
        ports:
        - name: grpc-api
          containerPort: 8080
        livenessProbe:
          tcpSocket:
            port: grpc-api
          initialDelaySeconds: 3
          periodSeconds: 5
          timeoutSeconds: 2
        readinessProbe:
          tcpSocket:
            port: grpc-api
          initialDelaySeconds: 3
          periodSeconds: 5
          timeoutSeconds: 2
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsGroup: 0
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
{{- end }}
