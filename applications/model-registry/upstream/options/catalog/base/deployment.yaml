apiVersion: apps/v1
kind: Deployment
metadata:
  name: model-catalog-server
  labels:
    app.kubernetes.io/name: model-catalog
    app.kubernetes.io/part-of: model-catalog
    app.kubernetes.io/component: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: model-catalog
      app.kubernetes.io/part-of: model-catalog
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        sidecar.istio.io/inject: "true"
        app.kubernetes.io/name: model-catalog
        app.kubernetes.io/part-of: model-catalog
        app.kubernetes.io/component: server
    spec:
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        runAsNonRoot: true
      volumes:
      - name: sources
        configMap:
          name: model-catalog-sources
      containers:
        - name: catalog
          env:
            - name: PGHOST
              value: model-catalog-postgres
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: model-catalog-postgres
                  key: POSTGRES_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: model-catalog-postgres
                  key: POSTGRES_PASSWORD
          command:
            - /model-registry
            - catalog
          args:
            - --listen=0.0.0.0:8080
            - --catalogs-path=/catalog/sources.yaml
          image: ghcr.io/kubeflow/model-registry/server:latest
          ports:
            - name: http-api
              containerPort: 8080
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 5
            tcpSocket:
              port: http-api
            timeoutSeconds: 2
          readinessProbe:
            initialDelaySeconds: 3
            periodSeconds: 5
            tcpSocket:
              port: http-api
            timeoutSeconds: 2
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
          - name: sources
            mountPath: /catalog
