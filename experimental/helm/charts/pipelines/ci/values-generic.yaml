# Generic Configuration

global:
  namespace: kubeflow
  imageRegistry: ghcr.io/kubeflow
  imageTag: "2.14.3"
  imagePullPolicy: IfNotPresent

# Installation mode - generic single-user
installMode:
  type: generic
  multiUser:
    enabled: false
  includeApplicationCrdId: false

# CRDs configuration
crds:
  install: false
  application: false

# Cache deployer for generic mode
cacheDeployer:
  enabled: true
  serviceAccount:
    create: false

# Environment configuration
env:
  platform: platform-agnostic

# Database configuration - use built-in MySQL
mysql:
  enabled: false

postgresql:
  enabled: false

externalDatabase:
  type: mysql
  host: mysql
  port: 3306
  database: mlpipeline
  username: root
  password: ""

# Database names
database:
  pipelinedb: mlpipeline
  metadb: metadb
  cachedb: cachedb
  connectionMaxLifetime: "120s"

# Object storage configuration - use built-in MinIO
objectStore:
  provider: minio
  minio:
    enabled: true
    bucket: mlpipeline
    secure: false

minio:
  enabled: false

# Argo Workflows configuration - use built-in
argo:
  enabled: false

# Built-in third-party components
thirdParty:
  mysql:
    enabled: false
  minio:
    enabled: false
    portName: http
  argo:
    enabled: false

# Pipeline Configuration
pipeline:
  app:
    name: pipeline
    version: "2.14.3"
  defaultPipelineRoot: ""
  autoUpdatePipelineDefaultVersion: true
  cronScheduleTimezone: "UTC"
  cache:
    image: "ghcr.io/containerd/busybox"
    nodeRestrictions: false
    maximumStaleness: ""
    defaultStaleness: ""

# API Server configuration
apiServer:
  enabled: true
  replicas: 1
  resources:
    requests:
      cpu: 250m
      memory: 500Mi
  env:
    publishLogs: true
    pipelineLogLevel: "1"
    autoUpdatePipelineDefaultVersion: true
    v2DriverImage: "ghcr.io/kubeflow/kfp-driver:2.14.3"
    v2LauncherImage: "ghcr.io/kubeflow/kfp-launcher:2.14.3"
  additionalEnv:
    - name: PUBLISH_LOGS
      value: "true"
    - name: LOG_LEVEL
      value: "info"
    - name: PIPELINE_LOG_LEVEL
      value: "1"
    - name: AUTO_UPDATE_PIPELINE_DEFAULT_VERSION
      key: autoUpdatePipelineDefaultVersion
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: OBJECTSTORECONFIG_SECURE
      value: "false"
    - name: OBJECTSTORECONFIG_BUCKETNAME
      key: bucketName
    - name: DBCONFIG_USER
      key: username
    - name: DBCONFIG_PASSWORD
      key: password
    - name: DBCONFIG_DBNAME
      key: pipelineDb
    - name: DBCONFIG_HOST
      key: dbHost
    - name: DBCONFIG_PORT
      key: dbPort
    - name: DBCONFIG_CONMAXLIFETIME
      key: ConMaxLifeTime
    - name: DB_DRIVER_NAME
      key: dbType
    - name: DBCONFIG_MYSQLCONFIG_USER
      key: username
    - name: DBCONFIG_MYSQLCONFIG_PASSWORD
      key: password
    - name: DBCONFIG_MYSQLCONFIG_DBNAME
      key: pipelineDb
    - name: DBCONFIG_MYSQLCONFIG_HOST
      key: mysqlHost
    - name: DBCONFIG_MYSQLCONFIG_PORT
      key: mysqlPort
    - name: OBJECTSTORECONFIG_ACCESSKEY
      key: accesskey
    - name: OBJECTSTORECONFIG_SECRETACCESSKEY
      key: secretkey
    - name: V2_DRIVER_IMAGE
      value: "ghcr.io/kubeflow/kfp-driver:2.14.3"
    - name: V2_LAUNCHER_IMAGE
      value: "ghcr.io/kubeflow/kfp-launcher:2.14.3"

# Persistence Agent configuration
persistenceAgent:
  enabled: true
  replicas: 1
  resources:
    requests:
      cpu: 120m
      memory: 500Mi
  additionalEnv:
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace

# Scheduled Workflow configuration
scheduledWorkflow:
  enabled: true
  replicas: 1
  additionalEnv:
    - name: LOG_LEVEL
      value: "info"
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    

# UI configuration
ui:
  enabled: true
  replicas: 1
  resources:
    requests:
      cpu: 10m
      memory: 70Mi
  env:
    allowCustomVisualizations: true
    argoArchiveLogs: true
    disableGkeMetadata: true
  additionalEnv:
    - name: VIEWER_TENSORBOARD_POD_TEMPLATE_SPEC_PATH
      value: "/etc/config/viewer-pod-template.json"
    - name: MINIO_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: MINIO_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          key: accesskey
          name: mlpipeline-minio-artifact
    - name: MINIO_SECRET_KEY
      valueFrom:
        secretKeyRef:
          key: secretkey
          name: mlpipeline-minio-artifact
    - name: ALLOW_CUSTOM_VISUALIZATIONS
      value: "true"
    - name: FRONTEND_SERVER_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: ARGO_ARCHIVE_LOGS
      value: "true"
    - name: DISABLE_GKE_METADATA
      value: "true"


# Viewer CRD Controller configuration
viewerCrd:
  enabled: true
  replicas: 1
  image:
    pullPolicy: Always
  env:
    maxNumViewers: "50"
  additionalEnv:
    - name: MAX_NUM_VIEWERS
      value: "50"
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace

# Visualization Server configuration
visualization:
  enabled: true
  replicas: 1
  resources:
    requests:
      cpu: 30m
      memory: 500Mi

# Cache System Configuration
cache:
  enabled: true
  server:
    replicas: 1
    resources:
      requests:
        cpu: 120m
        memory: 500Mi
    additionalEnv:
      - name: DEFAULT_CACHE_STALENESS
        key: DEFAULT_CACHE_STALENESS
      - name: MAXIMUM_CACHE_STALENESS
        key: MAXIMUM_CACHE_STALENESS
      - name: CACHE_IMAGE
        key: cacheImage
      - name: CACHE_NODE_RESTRICTIONS
        key: cacheNodeRestrictions
      - name: DBCONFIG_DRIVER
        value: "mysql"
      - name: DBCONFIG_DB_NAME
        key: cacheDb
      - name: DBCONFIG_HOST_NAME
        key: dbHost
      - name: DBCONFIG_PORT
        key: dbPort
      - name: DBCONFIG_USER
        key: username
      - name: DBCONFIG_PASSWORD
        key: password
      - name: NAMESPACE_TO_WATCH
        key: null

# ML Metadata Configuration
metadata:
  enabled: false
  grpc:
    replicas: 1
  envoy:
    replicas: 1
    resources:
      requests:
        cpu: 20m
        memory: 20Mi
      limits:
        cpu: 100m
        memory: 100Mi

# Metadata Writer Configuration
metadataWriter:
  enabled: true
  replicas: 1

# Disable cloud-specific features
monitoring:
  prometheus:
    enabled: false
  grafana:
    enabled: false

certManager:
  enabled: false

networking:
  istio:
    enabled: false

# Disable webhooks for generic scenario
webhooks:
  enabled: false

# Profile controller disabled for single-user
profileController:
  enabled: false

# Application CRD disabled
application:
  enabled: false
