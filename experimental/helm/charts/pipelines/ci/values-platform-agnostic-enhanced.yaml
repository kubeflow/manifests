# Platform-Agnostic Configuration - Enhanced
# This configuration provides a complete platform-agnostic deployment
# using MinIO for object storage and MySQL for database

global:
  namespace: kubeflow
  imageRegistry: ghcr.io/kubeflow
  imageTag: "2.14.3"
  imagePullPolicy: IfNotPresent

# Installation mode
installMode:
  type: generic
  multiUser:
    enabled: false

# Database Configuration - Using built-in MySQL
mysql:
  enabled: false
  auth:
    rootPassword: "root123"
    username: "mlpipeline"
    password: "mlpipeline123"
    database: "mlpipeline"
  primary:
    persistence:
      enabled: true
      size: 20Gi

postgresql:
  enabled: false

externalDatabase:
  type: mysql
  host: ""
  port: 3306
  database: mlpipeline
  username: root
  password: ""

# Object Storage Configuration - Using built-in MinIO
minio:
  enabled: false
  auth:
    rootUser: "minio"
    rootPassword: "minio123"
  defaultBuckets: "mlpipeline"
  persistence:
    enabled: true
    size: 20Gi

objectStore:
  provider: minio
  secure: false
  bucketName: mlpipeline
  
# Database names
database:
  pipelinedb: mlpipeline
  metadb: metadb
  cachedb: cachedb

# Pipeline Configuration
pipeline:
  # Platform-agnostic specific: Empty defaultPipelineRoot
  defaultPipelineRoot: ""
  cache:
    image: "ghcr.io/containerd/busybox"
    nodeRestrictions: false
    maximumStaleness: ""
    defaultStaleness: ""

# Argo Workflows Configuration - use built-in
argo:
  enabled: false
  # Basic Argo configuration for platform-agnostic deployment

# Built-in third-party components
thirdParty:
  mysql:
    enabled: true
  minio:
    enabled: true
    portName: http
  argo:
    enabled: true

# Environment Configuration
env:
  platform: platform-agnostic

# Resource Configuration
apiServer:
  resources:
    requests:
      cpu: 250m
      memory: 500Mi
  additionalEnv:
    - name: PUBLISH_LOGS
      value: "true"
    - name: LOG_LEVEL
      value: "info"
    - name: PIPELINE_LOG_LEVEL
      value: "1"
    - name: AUTO_UPDATE_PIPELINE_DEFAULT_VERSION
      key: autoUpdatePipelineDefaultVersion
    - name: POD_NAMESPACE
    - name: OBJECTSTORECONFIG_SECURE
      value: "false"
    - name: OBJECTSTORECONFIG_BUCKETNAME
      key: bucketName
    - name: DBCONFIG_USER
      key: username
    - name: DBCONFIG_PASSWORD
      key: password
    - name: DBCONFIG_DBNAME
      key: pipelineDb
    - name: DBCONFIG_HOST
      key: dbHost
    - name: DBCONFIG_PORT
      key: dbPort
    - name: DBCONFIG_CONMAXLIFETIME
      key: ConMaxLifeTime
    - name: DB_DRIVER_NAME
      key: dbType
    - name: DBCONFIG_MYSQLCONFIG_USER
      key: username
    - name: DBCONFIG_MYSQLCONFIG_PASSWORD
      key: password
    - name: DBCONFIG_MYSQLCONFIG_DBNAME
      key: pipelineDb
    - name: DBCONFIG_MYSQLCONFIG_HOST
      key: mysqlHost
    - name: DBCONFIG_MYSQLCONFIG_PORT
      key: mysqlPort
    - name: OBJECTSTORECONFIG_ACCESSKEY
      key: accesskey
    - name: OBJECTSTORECONFIG_SECRETACCESSKEY
      key: secretkey
    - name: V2_DRIVER_IMAGE
      value: "ghcr.io/kubeflow/kfp-driver:2.14.3"
    - name: V2_LAUNCHER_IMAGE
      value: "ghcr.io/kubeflow/kfp-launcher:2.14.3"

persistenceAgent:
  resources:
    requests:
      cpu: 120m
      memory: 500Mi
  additionalEnv:
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace

scheduledWorkflow:
  resources:
  additionalEnv:
    - name: LOG_LEVEL
      value: "info"
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace

ui:
  resources:
    requests:
      cpu: 10m
      memory: 70Mi

  additionalEnv:
    - name: VIEWER_TENSORBOARD_POD_TEMPLATE_SPEC_PATH
      value: "/etc/config/viewer-pod-template.json"
    - name: MINIO_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: MINIO_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          key: accesskey
          name: mlpipeline-minio-artifact
    - name: MINIO_SECRET_KEY
      valueFrom:
        secretKeyRef:
          key: secretkey
          name: mlpipeline-minio-artifact
    - name: ALLOW_CUSTOM_VISUALIZATIONS
      value: "true"
    - name: FRONTEND_SERVER_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: ARGO_ARCHIVE_LOGS
      value: "true"
    - name: DISABLE_GKE_METADATA
      value: "true"
# Disable CRDs for platform-agnostic scenario
crds:
  install: false

# Disable webhooks for platform-agnostic scenario
webhooks:
  enabled: false

metadata:
  enabled: true
  grpc:
    resources:
  envoy:
    resources:
      requests:
        cpu: 20m
        memory: 20Mi
      limits:
        cpu: 100m
        memory: 100Mi

cache:
  server:
    resources:
      requests:
        cpu: 120m
        memory: 500Mi
      limits:
        cpu: 250m
        memory: 1Gi
    additionalEnv:
      - name: DEFAULT_CACHE_STALENESS
        key: DEFAULT_CACHE_STALENESS
      - name: MAXIMUM_CACHE_STALENESS
        key: MAXIMUM_CACHE_STALENESS
      - name: CACHE_IMAGE
        key: cacheImage
      - name: CACHE_NODE_RESTRICTIONS
        key: cacheNodeRestrictions
      - name: DBCONFIG_DRIVER
      - name: DBCONFIG_DB_NAME
        key: cacheDb
      - name: DBCONFIG_HOST_NAME
        key: dbHost
      - name: DBCONFIG_PORT
        key: dbPort
      - name: DBCONFIG_USER
        key: username
      - name: DBCONFIG_PASSWORD
        key: password
      - name: NAMESPACE_TO_WATCH


visualization:
  resources:
    requests:
      cpu: 30m
      memory: 500Mi

viewerCrd:
  image:
    pullPolicy: Always
  resources:
  additionalEnv:
    - name: MAX_NUM_VIEWERS
      value: 50
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace

# Monitoring disabled for platform-agnostic
monitoring:
  prometheus:
    enabled: false
  grafana:
    enabled: false

# Service mesh disabled for platform-agnostic
istio:
  enabled: false

# Cert-manager disabled for platform-agnostic
certManager:
  enabled: false
