apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mysql
    app.kubernetes.io/component: mysql
    app.kubernetes.io/instance: mysql-0.2.0
    app.kubernetes.io/managed-by: kfctl
    app.kubernetes.io/name: mysql
    app.kubernetes.io/part-of: kubeflow
    app.kubernetes.io/version: 0.2.0
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
      app.kubernetes.io/component: mysql
      app.kubernetes.io/instance: mysql-0.2.0
      app.kubernetes.io/managed-by: kfctl
      app.kubernetes.io/name: mysql
      app.kubernetes.io/part-of: kubeflow
      app.kubernetes.io/version: 0.2.0
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: mysql
        app.kubernetes.io/component: mysql
        app.kubernetes.io/instance: mysql-0.2.0
        app.kubernetes.io/managed-by: kfctl
        app.kubernetes.io/name: mysql
        app.kubernetes.io/part-of: kubeflow
        app.kubernetes.io/version: 0.2.0
    spec:
      containers:
      - env:
        - name: MYSQL_ALLOW_EMPTY_PASSWORD
          value: "true"
        image: mysql:5.6
        name: mysql
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-persistent-storage
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: ""
