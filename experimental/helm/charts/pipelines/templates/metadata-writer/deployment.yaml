{{- if .Values.metadataWriter.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metadata-writer
  namespace: {{ include "kubeflow-pipelines.namespace" . }}
  labels:
{{- if eq .Values.installMode.type "multi-user" }}
    app: metadata-writer
    app.kubernetes.io/component: ml-pipeline
    app.kubernetes.io/name: kubeflow-pipelines
{{- if .Values.installMode.legacyLabels }}
    application-crd-id: kubeflow-pipelines
{{- end }}
{{- else }}
    {{- include "kubeflow-pipelines.labels" . | nindent 4 }}
    app: metadata-writer
{{- end }}
spec:
  replicas: {{ .Values.metadataWriter.replicas }}
  selector:
    matchLabels:
      {{- include "kubeflow-pipelines.metadataWriterSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
{{- if eq .Values.installMode.type "multi-user" }}
        app: metadata-writer
        app.kubernetes.io/component: ml-pipeline
        app.kubernetes.io/name: kubeflow-pipelines
{{- if .Values.installMode.legacyLabels }}
        application-crd-id: kubeflow-pipelines
{{- end }}
{{- else }}
        {{- include "kubeflow-pipelines.labels" . | nindent 8 }}
        app: metadata-writer
{{- end }}
    spec:
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: kubeflow-pipelines-metadata-writer
      containers:
      - name: main
        image: {{ include "kubeflow-pipelines.image" (dict "repository" .Values.metadataWriter.image.repository "tag" .Values.metadataWriter.image.tag "context" .) }}
        env:
        - name: NAMESPACE_TO_WATCH
{{- if eq .Values.installMode.type "multi-user" }}
          value: ""
{{- else }}
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
{{- end }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsGroup: 0
          runAsNonRoot: true
          runAsUser: 1000
{{- end }}
