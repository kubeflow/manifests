# GCP-Specific Configuration - Enhanced
# This configuration provides GCP integration with GCS and Cloud SQL

global:
  namespace: kubeflow
  imageRegistry: ghcr.io/kubeflow
  imageTag: "2.5.0"
  imagePullPolicy: IfNotPresent

# Installation mode
installMode:
  type: generic
  multiUser:
    enabled: false

# Database Configuration - External Cloud SQL
mysql:
  enabled: false

postgresql:
  enabled: false

externalDatabase:
  type: mysql
  host: "127.0.0.1"
  port: 3306
  database: pipelinedb
  username: "YOUR_CLOUDSQL_USERNAME"
  password: "YOUR_CLOUDSQL_PASSWORD"
  existingSecret: "mysql-secret"

# Object Storage Configuration - GCS
minio:
  enabled: false

objectStore:
  provider: gcs
  secure: true
  bucketName: "yourGcsBucketName"
  gcs:
    projectId: "yourGcsProjectId"
    serviceAccount: ""

# Database names
database:
  pipelinedb: pipelinedb
  metadb: metadb
  cachedb: cachedb

# Pipeline Configuration
pipeline:
  cache:
    image: "registry.k8s.io/busybox"
    nodeRestrictions: false
    maximumStaleness: ""
    defaultStaleness: ""

# Argo Workflows Configuration
argo:
  enabled: false
  # GCP-specific Argo configuration

# Environment Configuration
env:
  platform: gcp
  gcp:
    project: "yourGcsProjectId"
    cloudsql:
      enabled: true
      instanceName: "yourCloudSqlInstanceName"
      region: "YOUR_GCP_REGION"
    gcs:
      enabled: true
      bucket: "yourGcsBucketName"
      projectId: "yourGcsProjectId"

# GCP-specific API Server configuration
apiServer:
  env:
    # Object store configuration for GCS
    objectStoreSecure: "true"
    objectStoreBucketName: "yourGcsBucketName"
    objectStoreHost: "storage.googleapis.com"
    objectStoreRegion: ""
    objectStorePort: ""
  
  # Service account annotations for Workload Identity
  serviceAccount:
    annotations:
      iam.gke.io/gcp-service-account: "kubeflow-pipelines@yourGcsProjectId.iam.gserviceaccount.com"

  resources:
    requests:
      cpu: 250m
      memory: 500Mi
    limits:
      cpu: 1
      memory: 2Gi

# GCP-specific UI configuration
ui:
  env:
    # MinIO service configuration for GCS
    minioServiceHost: "storage.googleapis.com"
    minioServiceRegion: ""
  
  resources:
    requests:
      cpu: 10m
      memory: 70Mi

# Enhanced resources for GCP deployment
persistenceAgent:
  resources:
    requests:
      cpu: 120m
      memory: 500Mi
    limits:
      cpu: 500m
      memory: 1Gi

scheduledWorkflow:
  resources:
    requests:
      cpu: 120m
      memory: 100Mi
    limits:
      cpu: 250m
      memory: 500Mi

metadata:
  grpc:
    resources:
      requests:
        cpu: 100m
        memory: 300Mi
      limits:
        cpu: 500m
        memory: 1Gi
  envoy:
    resources:
      requests:
        cpu: 20m
        memory: 20Mi
      limits:
        cpu: 100m
        memory: 100Mi

cache:
  server:
    resources:
      requests:
        cpu: 120m
        memory: 500Mi
      limits:
        cpu: 500m
        memory: 1Gi

visualization:
  resources:
    requests:
      cpu: 30m
      memory: 500Mi

viewerCrd:
  image:
    pullPolicy: Always

# Cloud SQL Proxy sidecar configuration
cloudsqlProxy:
  enabled: true
  image: "gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.0.0"
  instanceConnectionName: "yourGcsProjectId:YOUR_GCP_REGION:yourCloudSqlInstanceName"
  serviceAccount:
    annotations:
      iam.gke.io/gcp-service-account: "cloudsql-proxy@yourGcsProjectId.iam.gserviceaccount.com"

# GCP Load Balancer integration
  service:
    type: LoadBalancer
    annotations:
      cloud.google.com/load-balancer-type: "External"
      networking.gke.io/load-balancer-type: "External"

# Monitoring with Google Cloud Monitoring
monitoring:
  prometheus:
    enabled: false
  grafana:
    enabled: false
  stackdriver:
    enabled: true
    projectId: "yourGcsProjectId"

# Service mesh integration with Istio on GKE
istio:
  enabled: true
  gateway: "kubeflow-gateway"
  gke:
    enabled: true

# Cert-manager with Google Cloud DNS
certManager:
  enabled: true
  issuer: "letsencrypt-prod"
  issuerKind: "ClusterIssuer"
  gcp:
    projectId: "yourGcsProjectId"
    serviceAccountKey: ""  # Use Workload Identity instead
