apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: kubebench-job
spec:
  entrypoint: kubebench-workflow
  serviceAccountName: kubebench-user-kubebench-job
  templates:
  - name: kubebench-workflow
    steps:
    - - name: run-configurator
        template: configurator
    - - arguments:
          parameters:
          - name: kf-job-manifest
            value: '{{steps.run-configurator.outputs.parameters.kf-job-manifest}}'
          - name: experiment-id
            value: '{{steps.run-configurator.outputs.parameters.experiment-id}}'
        name: launch-main-job
        template: main-job
    - - arguments:
          parameters:
          - name: kf-job-manifest
            value: '{{steps.run-configurator.outputs.parameters.kf-job-manifest}}'
        name: wait-for-main-job
        template: main-job-monitor
    - - arguments:
          parameters:
          - name: kf-job-manifest
            value: '{{steps.run-configurator.outputs.parameters.kf-job-manifest}}'
          - name: experiment-id
            value: '{{steps.run-configurator.outputs.parameters.experiment-id}}'
        name: run-post-job
        template: post-job
    - - arguments:
          parameters:
          - name: kf-job-manifest
            value: '{{steps.run-configurator.outputs.parameters.kf-job-manifest}}'
          - name: experiment-id
            value: '{{steps.run-configurator.outputs.parameters.experiment-id}}'
        name: run-reporter
        template: reporter
  - container:
      command:
      - configurator
      - '--template-ref={"name": "kubebench-example-tfcnn", "package": "kubebench-examples",
        "registry": "github.com/kubeflow/kubebench/tree/master/kubebench"}'
      - --config=tf-cnn/tf-cnn-dummy.yaml
      - --namespace=kubeflow
      - '--owner-references=[{"apiVersion": "argoproj.io/v1alpha1", "blockOwnerDeletion":
        true, "kind": "Workflow", "name": "{{workflow.name}}", "uid": "{{workflow.uid}}"}]'
      - '--volumes=[{"name": "kubebench-config-volume", "persistentVolumeClaim": {"claimName":
        "kubebench-config-pvc"}}, {"name": "kubebench-exp-volume", "persistentVolumeClaim":
        {"claimName": "kubebench-exp-pvc"}}]'
      - '--volume-mounts=[{"mountPath": "/kubebench/config", "name": "kubebench-config-volume"},
        {"mountPath": "/kubebench/experiments", "name": "kubebench-exp-volume"}]'
      - '--env-vars=[{"name": "KUBEBENCH_CONFIG_ROOT", "value": "/kubebench/config"},
        {"name": "KUBEBENCH_EXP_ROOT", "value": "/kubebench/experiments"}, {"name":
        "KUBEBENCH_DATA_ROOT", "value": "/kubebench/data"}, {"name": "KUBEBENCH_EXP_ID",
        "value": "null"}, {"name": "KUBEBENCH_EXP_PATH", "value": "$(KUBEBENCH_EXP_ROOT)/$(KUBEBENCH_EXP_ID)"},
        {"name": "KUBEBENCH_EXP_CONFIG_PATH", "value": "$(KUBEBENCH_EXP_PATH)/config"},
        {"name": "KUBEBENCH_EXP_OUTPUT_PATH", "value": "$(KUBEBENCH_EXP_PATH)/output"},
        {"name": "KUBEBENCH_EXP_RESULT_PATH", "value": "$(KUBEBENCH_EXP_PATH)/result"}]'
      - --manifest-output=/kubebench/configurator/output/kf-job-manifest.yaml
      - --experiment-id-output=/kubebench/configurator/output/experiment-id
      env:
      - name: KUBEBENCH_CONFIG_ROOT
        value: /kubebench/config
      - name: KUBEBENCH_EXP_ROOT
        value: /kubebench/experiments
      - name: KUBEBENCH_DATA_ROOT
        value: /kubebench/data
      image: gcr.io/kubeflow-images-public/kubebench/kubebench-controller:v0.4.0-13-g262c593
      volumeMounts:
      - mountPath: /kubebench/config
        name: kubebench-config-volume
      - mountPath: /kubebench/experiments
        name: kubebench-exp-volume
    name: configurator
    outputs:
      parameters:
      - name: kf-job-manifest
        valueFrom:
          path: /kubebench/configurator/output/kf-job-manifest.yaml
      - name: experiment-id
        valueFrom:
          path: /kubebench/configurator/output/experiment-id
  - inputs:
      parameters:
      - name: kf-job-manifest
    name: main-job
    resource:
      action: create
      manifest: '{{inputs.parameters.kf-job-manifest}}'
      successCondition: status.startTime
  - inputs:
      parameters:
      - name: kf-job-manifest
    name: main-job-monitor
    resource:
      action: get
      manifest: '{{inputs.parameters.kf-job-manifest}}'
      successCondition: status.completionTime
  - container:
      env:
      - name: KUBEBENCH_CONFIG_ROOT
        value: /kubebench/config
      - name: KUBEBENCH_EXP_ROOT
        value: /kubebench/experiments
      - name: KUBEBENCH_DATA_ROOT
        value: /kubebench/data
      - name: KUBEBENCH_EXP_ID
        value: '{{inputs.parameters.experiment-id}}'
      - name: KUBEBENCH_EXP_PATH
        value: $(KUBEBENCH_EXP_ROOT)/$(KUBEBENCH_EXP_ID)
      - name: KUBEBENCH_EXP_CONFIG_PATH
        value: $(KUBEBENCH_EXP_PATH)/config
      - name: KUBEBENCH_EXP_OUTPUT_PATH
        value: $(KUBEBENCH_EXP_PATH)/output
      - name: KUBEBENCH_EXP_RESULT_PATH
        value: $(KUBEBENCH_EXP_PATH)/result
      image: gcr.io/kubeflow-images-public/kubebench/kubebench-example-tf-cnn-post-processor:v0.4.0-13-g262c593
      volumeMounts:
      - mountPath: /kubebench/config
        name: kubebench-config-volume
      - mountPath: /kubebench/experiments
        name: kubebench-exp-volume
    inputs:
      parameters:
      - name: experiment-id
    name: post-job
  - container:
      command:
      - reporter
      - csv
      - --input-file=result.json
      - --output-file=report.csv
      env:
      - name: KUBEBENCH_CONFIG_ROOT
        value: /kubebench/config
      - name: KUBEBENCH_EXP_ROOT
        value: /kubebench/experiments
      - name: KUBEBENCH_DATA_ROOT
        value: /kubebench/data
      - name: KUBEBENCH_EXP_ID
        value: '{{inputs.parameters.experiment-id}}'
      - name: KUBEBENCH_EXP_PATH
        value: $(KUBEBENCH_EXP_ROOT)/$(KUBEBENCH_EXP_ID)
      - name: KUBEBENCH_EXP_CONFIG_PATH
        value: $(KUBEBENCH_EXP_PATH)/config
      - name: KUBEBENCH_EXP_OUTPUT_PATH
        value: $(KUBEBENCH_EXP_PATH)/output
      - name: KUBEBENCH_EXP_RESULT_PATH
        value: $(KUBEBENCH_EXP_PATH)/result
      image: gcr.io/kubeflow-images-public/kubebench/kubebench-controller:v0.4.0-13-g262c593
      volumeMounts:
      - mountPath: /kubebench/config
        name: kubebench-config-volume
      - mountPath: /kubebench/experiments
        name: kubebench-exp-volume
    inputs:
      parameters:
      - name: experiment-id
    name: reporter
  volumes:
  - name: kubebench-config-volume
    persistentVolumeClaim:
      claimName: kubebench-config-pvc
  - name: kubebench-exp-volume
    persistentVolumeClaim:
      claimName: kubebench-exp-pvc
