# Multi-User Configuration - Enhanced
# This configuration provides multi-user deployment with enhanced RBAC and isolation

global:
  namespace: kubeflow
  imageRegistry: ghcr.io/kubeflow
  imageTag: "2.14.3"
  imagePullPolicy: Always

# Installation mode - Multi-user enabled
installMode:
  type: multi-user
  multiUser:
    enabled: true
    profileController:
      enabled: true

# Database Configuration - Enhanced for multi-user
mysql:
  enabled: false
  auth:
    rootPassword: "root123"
    username: "mlpipeline"
    password: "mlpipeline123"
    database: "mlpipeline"
  primary:
    persistence:
      enabled: true
      size: 50Gi  # Larger storage for multi-user
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 1
        memory: 2Gi

postgresql:
  enabled: false

# Object Storage Configuration - Enhanced for multi-user
minio:
  enabled: false
  auth:
    rootUser: "minio"
    rootPassword: "minio123"
  defaultBuckets: "mlpipeline"
  persistence:
    enabled: true
    size: 100Gi  # Larger storage for multi-user
  resources:
    requests:
      cpu: 250m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 1Gi

objectStore:
  provider: minio
  secure: false
  bucketName: mlpipeline

# Database names
database:
  pipelinedb: mlpipeline
  metadb: metadb
  cachedb: cachedb

# Pipeline Configuration
pipeline:
  cache:
    image: "ghcr.io/containerd/busybox"
    nodeRestrictions: false
    maximumStaleness: ""
    defaultStaleness: ""

# Argo Workflows Configuration - Multi-user
argo:
  enabled: false
  # Multi-user uses built-in minimal Argo instead of subchart

# Environment Configuration
env:
  platform: platform-agnostic

# Enhanced RBAC Configuration
rbac:
  create: true
  multiUser:
    enabled: true
    # Additional RBAC rules for multi-user scenarios

# Multi-user API Server configuration
apiServer:
  env:
    # Multi-user specific environment variables
    multiUser: "true"
    kubeflowUserId: "user@example.com"
  
  resources:
    requests:
      cpu: 250m
      memory: 500Mi
  additionalEnv:
    - name: KUBEFLOW_USERID_HEADER
      value: "kubeflow-userid"
    - name: KUBEFLOW_USERID_PREFIX
      value: ""
    - name: PUBLISH_LOGS
      value: "true"
    - name: LOG_LEVEL
      value: "info"
    - name: PIPELINE_LOG_LEVEL
      value: "1"
    - name: AUTO_UPDATE_PIPELINE_DEFAULT_VERSION
      key: autoUpdatePipelineDefaultVersion
      configMapName: pipeline-install-config
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: OBJECTSTORECONFIG_SECURE
      value: "false"
    - name: OBJECTSTORECONFIG_BUCKETNAME
      key: bucketName
      configMapName: pipeline-install-config
    - name: DBCONFIG_USER
      key: username
      secretName: mysql-secret
    - name: DBCONFIG_PASSWORD
      key: password
      secretName: mysql-secret
    - name: DBCONFIG_DBNAME
      key: pipelineDb
      configMapName: pipeline-install-config
    - name: DBCONFIG_HOST
      key: dbHost
      configMapName: pipeline-install-config
    - name: DBCONFIG_PORT
      key: dbPort
      configMapName: pipeline-install-config
    - name: DBCONFIG_CONMAXLIFETIME
      key: ConMaxLifeTime
      configMapName: pipeline-install-config
    - name: DB_DRIVER_NAME
      key: dbType
      configMapName: pipeline-install-config
    - name: DBCONFIG_MYSQLCONFIG_USER
      key: username
      secretName: mysql-secret
    - name: DBCONFIG_MYSQLCONFIG_PASSWORD
      key: password
      secretName: mysql-secret
    - name: DBCONFIG_MYSQLCONFIG_DBNAME
      key: pipelineDb
      configMapName: pipeline-install-config
    - name: DBCONFIG_MYSQLCONFIG_HOST
      key: mysqlHost
      configMapName: pipeline-install-config
    - name: DBCONFIG_MYSQLCONFIG_PORT
      key: mysqlPort
      configMapName: pipeline-install-config
    - name: OBJECTSTORECONFIG_ACCESSKEY
      key: accesskey
      secretName: mlpipeline-minio-artifact
    - name: OBJECTSTORECONFIG_SECRETACCESSKEY
      key: secretkey
      secretName: mlpipeline-minio-artifact
    - name: V2_DRIVER_IMAGE
      value: "ghcr.io/kubeflow/kfp-driver:2.14.3"
    - name: V2_LAUNCHER_IMAGE
      value: "ghcr.io/kubeflow/kfp-launcher:2.14.3"

# Multi-user UI configuration
ui:
  env:
    # Multi-user UI configuration
    multiUser: "true"

  resources:
    requests:
      cpu: 10m
      memory: 70Mi

  additionalEnv:
    - name: VIEWER_TENSORBOARD_POD_TEMPLATE_SPEC_PATH
      value: "/etc/config/viewer-pod-template.json"
    - name: DEPLOYMENT
      value: "KUBEFLOW"
    - name: ARTIFACTS_SERVICE_PROXY_NAME
      value: "ml-pipeline-ui-artifact"
    - name: ARTIFACTS_SERVICE_PROXY_PORT
      value: "80"
    - name: ARTIFACTS_SERVICE_PROXY_ENABLED
      value: "true"
    - name: ENABLE_AUTHZ
      value: "true"
    - name: KUBEFLOW_USERID_HEADER
      value: "kubeflow-userid"
    - name: KUBEFLOW_USERID_PREFIX
      key: null
    - name: MINIO_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: MINIO_ACCESS_KEY
      key: accesskey
    - name: MINIO_SECRET_KEY
      key: secretkey
    - name: ALLOW_CUSTOM_VISUALIZATIONS
      value: "true"
    - name: FRONTEND_SERVER_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: ARGO_ARCHIVE_LOGS
      value: "true"
    - name: DISABLE_GKE_METADATA
      value: "true"


# Enhanced resources for multi-user deployment
persistenceAgent:
  resources:
    requests:
      cpu: 120m
      memory: 500Mi
  additionalEnv:
    - name: NAMESPACE
      value: ""

scheduledWorkflow:
  additionalEnv:
    - name: NAMESPACE
      value: ''
    - name: LOG_LEVEL
      value: "info"
      valueFrom: null

metadata:
  grpc:
    resources:
      requests:
        cpu: 250m
        memory: 500Mi
      limits:
        cpu: 1
        memory: 2Gi
  envoy:
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
      limits:
        cpu: 200m
        memory: 200Mi

cache:
  # Cache deployer disabled in multi-user mode
  enabled: true
  server:
    resources:
      requests:
        cpu: 250m
        memory: 1Gi
      limits:
        cpu: 1
        memory: 2Gi
    additionalEnv:
      - name: NAMESPACE_TO_WATCH
        key: null
      - name: DEFAULT_CACHE_STALENESS
        key: DEFAULT_CACHE_STALENESS
      - name: MAXIMUM_CACHE_STALENESS
        key: MAXIMUM_CACHE_STALENESS
      - name: CACHE_IMAGE
        key: cacheImage
      - name: CACHE_NODE_RESTRICTIONS
        key: cacheNodeRestrictions
      - name: DBCONFIG_DRIVER
        value: "mysql"
      - name: DBCONFIG_DB_NAME
        key: cacheDb
      - name: DBCONFIG_HOST_NAME
        key: dbHost
      - name: DBCONFIG_PORT
        key: dbPort
      - name: DBCONFIG_USER
        key: username
      - name: DBCONFIG_PASSWORD
        key: password

cacheDeployer:
  # Typically disabled in multi-user mode
  enabled: false

visualization:
  resources:
    requests:
      cpu: 30m
      memory: 500Mi

viewerCrd:
  env:
    maxNumViewers: ""
  additionalEnv:
    - name: NAMESPACE
      value: ""
    - name: MAX_NUM_VIEWERS
      value: 50

# Profile Controller Configuration (for multi-user)
profileController:
  enabled: true
  image:
    repository: kfp-profile-controller
    tag: "2.14.3"
  resources:
    requests:
      cpu: 100m
      memory: 200Mi
    limits:
      cpu: 500m
      memory: 1Gi

  additionalEnv:
    - name: KFP_VERSION
      key: appVersion
    - name: KFP_DEFAULT_PIPELINE_ROOT
      key: defaultPipelineRoot
    - name: MINIO_ACCESS_KEY
      key: accesskey
    - name: MINIO_SECRET_KEY
      key: secretkey

# Namespace Isolation Configuration
namespaceIsolation:
  enabled: true
  # Additional network policies and RBAC for isolation

# Security Configuration - Enhanced for multi-user
security:
  podSecurityStandards:
    enabled: true
    level: "restricted"
  networkPolicies:
    enabled: true
  
# Monitoring - Enhanced for multi-user
monitoring:
  prometheus:
    enabled: true
    multiUser: true
  grafana:
    enabled: true
    multiUser: true

# Service mesh - Recommended for multi-user
networking:
  istio:
    enabled: true
    gateway: kubeflow-gateway
  virtualService:
    enabled: true

# Cert-manager for TLS
certManager:
  enabled: true
  issuer: "kubeflow-self-signing-issuer"
  issuerKind: "ClusterIssuer"

# Additional multi-user specific configurations
multiUserConfig:
  # User namespace template
  userNamespaceTemplate: "kubeflow-user-{userid}"
  
  # Default resource quotas per user namespace
  resourceQuotas:
    requests.cpu: "2"
    requests.memory: "4Gi"
    limits.cpu: "4"
    limits.memory: "8Gi"
    persistentvolumeclaims: "10"
  
  # Network policies for user isolation
  networkPolicies:
    enabled: true
    allowCrossNamespace: false
  
  # RBAC templates for user permissions
  rbacTemplates:
    enabled: true
