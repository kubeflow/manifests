# Multi-User Configuration - Enhanced
# This configuration provides multi-user deployment with enhanced RBAC and isolation

global:
  namespace: kubeflow
  imageRegistry: ghcr.io/kubeflow
  imageTag: "2.5.0"
  imagePullPolicy: IfNotPresent

# Installation mode - Multi-user enabled
installMode:
  type: multi-user
  multiUser:
    enabled: true
    profileController:
      enabled: true

# Database Configuration - Enhanced for multi-user
mysql:
  enabled: true
  auth:
    rootPassword: "root123"
    username: "mlpipeline"
    password: "mlpipeline123"
    database: "mlpipeline"
  primary:
    persistence:
      enabled: true
      size: 50Gi  # Larger storage for multi-user
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 1
        memory: 2Gi

postgresql:
  enabled: false

# Object Storage Configuration - Enhanced for multi-user
minio:
  enabled: true
  auth:
    rootUser: "minio"
    rootPassword: "minio123"
  defaultBuckets: "mlpipeline"
  persistence:
    enabled: true
    size: 100Gi  # Larger storage for multi-user
  resources:
    requests:
      cpu: 250m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 1Gi

objectStore:
  provider: minio
  secure: false
  bucketName: mlpipeline

# Database names
database:
  pipelinedb: mlpipeline
  metadb: metadb
  cachedb: cachedb

# Pipeline Configuration
pipeline:
  cache:
    image: "registry.k8s.io/busybox"
    nodeRestrictions: true
    maximumStaleness: "P0D"
    defaultStaleness: "P0D"

# Argo Workflows Configuration - Multi-user
argo:
  enabled: true
  # Multi-user specific Argo configuration

# Environment Configuration
env:
  platform: platform-agnostic

# Enhanced RBAC Configuration
rbac:
  create: true
  multiUser:
    enabled: true
    # Additional RBAC rules for multi-user scenarios

# Multi-user API Server configuration
apiServer:
  env:
    # Multi-user specific environment variables
    multiUser: "true"
    kubeflowUserId: "user@example.com"
  
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 2
      memory: 4Gi

# Multi-user UI configuration
ui:
  env:
    # Multi-user UI configuration
    multiUser: "true"
  
  resources:
    requests:
      cpu: 100m
      memory: 200Mi
    limits:
      cpu: 500m
      memory: 1Gi

# Enhanced resources for multi-user deployment
persistenceAgent:
  resources:
    requests:
      cpu: 250m
      memory: 1Gi
    limits:
      cpu: 1
      memory: 2Gi

scheduledWorkflow:
  resources:
    requests:
      cpu: 250m
      memory: 500Mi
    limits:
      cpu: 500m
      memory: 1Gi

metadata:
  grpc:
    resources:
      requests:
        cpu: 250m
        memory: 500Mi
      limits:
        cpu: 1
        memory: 2Gi
  envoy:
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
      limits:
        cpu: 200m
        memory: 200Mi

cache:
  # Cache deployer disabled in multi-user mode
  enabled: true
  server:
    resources:
      requests:
        cpu: 250m
        memory: 1Gi
      limits:
        cpu: 1
        memory: 2Gi

cacheDeployer:
  # Typically disabled in multi-user mode
  enabled: false

visualization:
  resources:
    requests:
      cpu: 100m
      memory: 500Mi
    limits:
      cpu: 500m
      memory: 1Gi

viewerCrd:
  env:
    maxNumViewers: "200"
  resources:
    requests:
      cpu: 250m
      memory: 500Mi
    limits:
      cpu: 500m
      memory: 1Gi

# Profile Controller Configuration (for multi-user)
profileController:
  enabled: true
  image:
    repository: kfp-profile-controller
    tag: "2.5.0"
  resources:
    requests:
      cpu: 100m
      memory: 200Mi
    limits:
      cpu: 500m
      memory: 1Gi

# Namespace Isolation Configuration
namespaceIsolation:
  enabled: true
  # Additional network policies and RBAC for isolation

# Security Configuration - Enhanced for multi-user
security:
  podSecurityStandards:
    enabled: true
    level: "restricted"
  networkPolicies:
    enabled: true
  
# Monitoring - Enhanced for multi-user
monitoring:
  prometheus:
    enabled: true
    multiUser: true
  grafana:
    enabled: true
    multiUser: true

# Service mesh - Recommended for multi-user
istio:
  enabled: true
  gateway: kubeflow-gateway
  multiUser: true
  authorizationPolicies:
    enabled: true

# Cert-manager for TLS
certManager:
  enabled: true
  issuer: "kubeflow-self-signing-issuer"
  issuerKind: "ClusterIssuer"

# Additional multi-user specific configurations
multiUserConfig:
  # User namespace template
  userNamespaceTemplate: "kubeflow-user-{userid}"
  
  # Default resource quotas per user namespace
  resourceQuotas:
    requests.cpu: "2"
    requests.memory: "4Gi"
    limits.cpu: "4"
    limits.memory: "8Gi"
    persistentvolumeclaims: "10"
  
  # Network policies for user isolation
  networkPolicies:
    enabled: true
    allowCrossNamespace: false
  
  # RBAC templates for user permissions
  rbacTemplates:
    enabled: true
