name: KinD

on:
  pull_request:
    branches: [ 'master' ]

defaults:
  run:
    shell: bash
    working-directory: ./tests/e2e

jobs:

  e2e-tests:
    name: e2e tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Keep running if one leg fails.
      matrix:
        cluster:
        - v1.20.7
        #- v1.21.1

        test-suite:
        - ./tests/e2e

        include:
          # Map between K8s and KinD versions.
          # This is attempting to make it a bit clearer what's being tested.
          # See: https://github.com/kubernetes-sigs/kind/releases
        #- cluster: v1.21.1
          #k8s-version: v1.21.1
          #kind-version: v0.11.1
          #kind-image-sha: sha256:69860bda5563ac81e3c0057d654b5253219618a22ec3a346306239bba8cfa1a6
          #cluster-suffix: c${{ github.run_id }}.local
        - cluster: v1.20.7
          k8s-version: v1.20.7
          kind-version: v0.11.1
          kind-image-sha: sha256:688fba5ce6b825be62a7c7fe1415b35da2bdfbb5a69227c499ea4cc0008661ca
          cluster-suffix: c${{ github.run_id }}.local

    steps:
    - name: Check out code onto testing dir
      uses: actions/checkout@v2
      with:
        path: ./tests/e2e

    - name: Install KinD
      run: |
        set -x
        # Disable swap otherwise memory enforcement doesn't work
        # See: https://kubernetes.slack.com/archives/CEKK1KTN2/p1600009955324200
        sudo swapoff -a
        sudo rm -f /swapfile
        # Use in-memory storage to avoid etcd server timeouts.
        # https://kubernetes.slack.com/archives/CEKK1KTN2/p1615134111016300
        # https://github.com/kubernetes-sigs/kind/issues/845
        sudo mkdir -p /tmp/etcd
        sudo mount -t tmpfs tmpfs /tmp/etcd
        curl -Lo ./kind https://github.com/kubernetes-sigs/kind/releases/download/${{ matrix.kind-version }}/kind-$(uname)-amd64
        chmod +x ./kind
        sudo mv kind /usr/local/bin
    - name: Configure KinD Cluster
      working-directory: ./tests/e2e
      run: |
        set -x
        # KinD configuration.
        cat > kind.yaml <<EOF
        apiVersion: kind.x-k8s.io/v1alpha4
        kind: Cluster
        # Configure registry for KinD.
        containerdConfigPatches:
        - |-
          [plugins."io.containerd.grpc.v1.cri".registry.mirrors."$REGISTRY_NAME:$REGISTRY_PORT"]
            endpoint = ["http://$REGISTRY_NAME:$REGISTRY_PORT"]
        # This is needed in order to support projected volumes with service account tokens.
        # See: https://kubernetes.slack.com/archives/CEKK1KTN2/p1600268272383600
        kubeadmConfigPatches:
          - |
            apiVersion: kubeadm.k8s.io/v1beta2
            kind: ClusterConfiguration
            metadata:
              name: config
            apiServer:
              extraArgs:
                "service-account-issuer": "kubernetes.default.svc"
                "service-account-signing-key-file": "/etc/kubernetes/pki/sa.key"
        nodes:
        - role: control-plane
          image: kindest/node:${{ matrix.k8s-version }}@${{ matrix.kind-image-sha }}
          extraMounts:
          - containerPath: /var/lib/etcd
            hostPath: /tmp/etcd
        - role: worker
          image: kindest/node:${{ matrix.k8s-version }}@${{ matrix.kind-image-sha }}
        - role: worker
          image: kindest/node:${{ matrix.k8s-version }}@${{ matrix.kind-image-sha }}
        - role: worker
          image: kindest/node:${{ matrix.k8s-version }}@${{ matrix.kind-image-sha }}
        EOF
    - name: Create KinD Cluster
      working-directory: ./tests/e2e
      run: |
        set -x
        kind create cluster --config kind.yaml
    - name: Install Kustomize
      working-directory: ./tests/e2e
      run: |
        curl -Lo ./kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.2.0/kustomize_3.2.0_linux_amd64
        chmod +x ./kustomize
        sudo mv kustomize /usr/local/bin
    - name: Install Kubeflow Components
      working-directory: ./tests/e2e
      run: |
        ./hack/setup-kubeflow-light.sh
    - name: Run e2e tests
      working-directory: ./tests/e2e
      run: |
        cd tests/e2e
        pip install -r requirements.txt
        ./runner.sh
